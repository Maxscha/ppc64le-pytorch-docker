  specific short-term circumstances.  Projects should be ported to the NEW
  behavior and not rely on setting a policy to OLD.


-- Found OpenSSL: /usr/lib64/libcrypto.so (found version "1.0.2k")  
-- Check size of long double
-- Check size of long double - done
-- Performing Test COMPILER_SUPPORTS_LONG_DOUBLE
-- Performing Test COMPILER_SUPPORTS_LONG_DOUBLE - Success
-- Performing Test COMPILER_SUPPORTS_FLOAT128
-- Performing Test COMPILER_SUPPORTS_FLOAT128 - Failed
-- Performing Test COMPILER_SUPPORTS_VSX
-- Performing Test COMPILER_SUPPORTS_VSX - Success
-- Performing Test COMPILER_SUPPORTS_VSX3
-- Performing Test COMPILER_SUPPORTS_VSX3 - Failed
-- Found OpenMP_C: -fopenmp (found version "4.5") 
-- Found OpenMP_CXX: -fopenmp (found version "4.5") 
-- Found OpenMP: TRUE (found version "4.5")  
-- Performing Test COMPILER_SUPPORTS_OPENMP
-- Performing Test COMPILER_SUPPORTS_OPENMP - Success
-- Performing Test COMPILER_SUPPORTS_WEAK_ALIASES
-- Performing Test COMPILER_SUPPORTS_WEAK_ALIASES - Success
-- Performing Test COMPILER_SUPPORTS_BUILTIN_MATH
-- Performing Test COMPILER_SUPPORTS_BUILTIN_MATH - Success
-- Performing Test COMPILER_SUPPORTS_SYS_GETRANDOM
-- Performing Test COMPILER_SUPPORTS_SYS_GETRANDOM - Success
-- Configuring build for SLEEF-v3.6.0
   Target system: Linux-4.19.121-linuxkit
   Target processor: ppc64le
   Host system: Linux-4.19.121-linuxkit
   Host processor: ppc64le
   Detected C compiler: GNU @ /usr/bin/cc
   CMake: 3.18.4
   Make program: /usr/local/bin/ninja
-- Using option `-Wall -Wno-unused -Wno-attributes -Wno-unused-result -Wno-psabi -ffp-contract=off -fno-math-errno -fno-trapping-math` to compile libsleef
-- Building shared libs : OFF
-- Building static test bins: OFF
-- MPFR : LIB_MPFR-NOTFOUND
-- GMP : LIBGMP-NOTFOUND
-- RT : /usr/lib64/librt.so
-- FFTW3 : LIBFFTW3-NOTFOUND
-- OPENSSL : 1.0.2k
-- SDE : SDE_COMMAND-NOTFOUND
-- RUNNING_ON_TRAVIS : 
-- COMPILER_SUPPORTS_OPENMP : 1
AT_INSTALL_INCLUDE_DIR include/ATen/core
core header install: /pytorch/build/aten/src/ATen/core/TensorBody.h
-- Include NCCL operators
-- Excluding FakeLowP operators
-- Excluding ideep operators as we are not using ideep
-- Excluding image processing operators due to no opencv
-- Excluding video processing operators due to no opencv
-- MPI operators skipped due to no MPI support
-- Include Observer library
-- /usr/bin/c++ /pytorch/torch/abi-check.cpp -o /pytorch/build/abi-check
-- Determined _GLIBCXX_USE_CXX11_ABI=1
CMake Warning (dev) at torch/CMakeLists.txt:348:
  Syntax Warning in cmake code at column 107

  Argument not separated from preceding token by whitespace.
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at torch/CMakeLists.txt:348:
  Syntax Warning in cmake code at column 115

  Argument not separated from preceding token by whitespace.
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Automatic GPU detection failed. Building for common architectures.
-- Autodetected CUDA architecture(s): 3.5;5.0;5.2;6.0;6.1;7.0;7.5;7.5+PTX
CMake Warning (dev) at /usr/local/share/cmake-3.18/Modules/FindPackageHandleStandardArgs.cmake:273 (message):
  The package name passed to `find_package_handle_standard_args` (OpenMP_C)
  does not match the name of the calling package (OpenMP).  This can lead to
  problems in calling code that expects `find_package` result variables
  (e.g., `_FOUND`) to follow a certain pattern.
Call Stack (most recent call first):
  cmake/Modules/FindOpenMP.cmake:576 (find_package_handle_standard_args)
  caffe2/CMakeLists.txt:1089 (find_package)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at /usr/local/share/cmake-3.18/Modules/FindPackageHandleStandardArgs.cmake:273 (message):
  The package name passed to `find_package_handle_standard_args` (OpenMP_CXX)
  does not match the name of the calling package (OpenMP).  This can lead to
  problems in calling code that expects `find_package` result variables
  (e.g., `_FOUND`) to follow a certain pattern.
Call Stack (most recent call first):
  cmake/Modules/FindOpenMP.cmake:576 (find_package_handle_standard_args)
  caffe2/CMakeLists.txt:1089 (find_package)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- pytorch is compiling with OpenMP. 
OpenMP CXX_FLAGS: -fopenmp. 
OpenMP libraries: /usr/lib64/libgomp.so;/usr/lib64/libpthread.so.
-- Caffe2 is compiling with OpenMP. 
OpenMP CXX_FLAGS: -fopenmp. 
OpenMP libraries: /usr/lib64/libgomp.so;/usr/lib64/libpthread.so.
-- Using lib/python3.9/site-packages as python relative installation path
CMake Warning at CMakeLists.txt:891 (message):
  Generated cmake files are only fully tested if one builds with system glog,
  gflags, and protobuf.  Other settings may generate files that are not well
  tested.


-- 
-- ******** Summary ********
-- General:
--   CMake version         : 3.18.4
--   CMake command         : /usr/local/bin/cmake
--   System                : Linux
--   C++ compiler          : /usr/bin/c++
--   C++ compiler id       : GNU
--   C++ compiler version  : 4.8.5
--   Using ccache if found : ON
--   Found ccache          : CCACHE_PROGRAM-NOTFOUND
--   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format
--   Build type            : Release
--   Compile definitions   : ONNX_ML=1;ONNXIFI_ENABLE_EXT=1;ONNX_NAMESPACE=onnx_torch;HAVE_MMAP=1;_FILE_OFFSET_BITS=64;HAVE_SHM_OPEN=1;HAVE_SHM_UNLINK=1;HAVE_MALLOC_USABLE_SIZE=1;USE_EXTERNAL_MZCRC;MINIZ_DISABLE_ZIP_READER_CRC32_CHECKS
--   CMAKE_PREFIX_PATH     : /usr/local/lib/python3.9/site-packages;/usr/local/cuda
--   CMAKE_INSTALL_PREFIX  : /pytorch/torch
-- 
--   TORCH_VERSION         : 1.9.0
--   CAFFE2_VERSION        : 1.9.0
--   BUILD_CAFFE2          : ON
--   BUILD_CAFFE2_OPS      : ON
--   BUILD_CAFFE2_MOBILE   : OFF
--   BUILD_STATIC_RUNTIME_BENCHMARK: OFF
--   BUILD_TENSOREXPR_BENCHMARK: OFF
--   BUILD_BINARY          : OFF
--   BUILD_CUSTOM_PROTOBUF : ON
--     Link local protobuf : ON
--   BUILD_DOCS            : OFF
--   BUILD_PYTHON          : True
--     Python version      : 3.9.2
--     Python executable   : /usr/local/bin/python3
--     Pythonlibs version  : 3.9.2
--     Python library      : /usr/local/lib/libpython3.9.a
--     Python includes     : /usr/local/include/python3.9
--     Python site-packages: lib/python3.9/site-packages
--   BUILD_SHARED_LIBS     : ON
--   CAFFE2_USE_MSVC_STATIC_RUNTIME     : OFF
--   BUILD_TEST            : True
--   BUILD_JNI             : OFF
--   BUILD_MOBILE_AUTOGRAD : OFF
--   BUILD_LITE_INTERPRETER: OFF
--   INTERN_BUILD_MOBILE   : 
--   USE_BLAS              : 0
--   USE_LAPACK            : 0
--   USE_ASAN              : OFF
--   USE_CPP_CODE_COVERAGE : OFF
--   USE_CUDA              : ON
--     Split CUDA          : OFF
--     CUDA static link    : OFF
--     USE_CUDNN           : ON
--     CUDA version        : 10.2
--     cuDNN version       : 8.1.1
--     CUDA root directory : /usr/local/cuda
--     CUDA library        : /usr/local/cuda/lib64/stubs/libcuda.so
--     cudart library      : /usr/local/cuda/lib64/libcudart.so
--     cublas library      : /usr/local/cuda/lib64/libcublas.so
--     cufft library       : /usr/local/cuda/lib64/libcufft.so
--     curand library      : /usr/local/cuda/lib64/libcurand.so
--     cuDNN library       : /usr/lib64/libcudnn.so
--     nvrtc               : /usr/local/cuda/lib64/libnvrtc.so
--     CUDA include path   : /usr/local/cuda/include
--     NVCC executable     : /usr/local/cuda/bin/nvcc
--     NVCC flags          : -Xfatbin;-compress-all;-DONNX_NAMESPACE=onnx_torch;-gencode;arch=compute_35,code=sm_35;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_52,code=sm_52;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_75,code=compute_75;-Xcudafe;--diag_suppress=cc_clobber_ignored,--diag_suppress=integer_sign_change,--diag_suppress=useless_using_declaration,--diag_suppress=set_but_not_used,--diag_suppress=field_without_dll_interface,--diag_suppress=base_class_has_different_dll_interface,--diag_suppress=dll_interface_conflict_none_assumed,--diag_suppress=dll_interface_conflict_dllexport_assumed,--diag_suppress=implicit_return_from_non_void_function,--diag_suppress=unsigned_compare_with_zero,--diag_suppress=declared_but_not_referenced,--diag_suppress=bad_friend_decl;-std=c++14;-Xcompiler;-fPIC;--expt-relaxed-constexpr;--expt-extended-lambda;-Wno-deprecated-gpu-targets;--expt-extended-lambda;-Xcompiler;-fPIC;-DCUDA_HAS_FP16=1;-D__CUDA_NO_HALF_OPERATORS__;-D__CUDA_NO_HALF_CONVERSIONS__;-D__CUDA_NO_BFLOAT16_CONVERSIONS__;-D__CUDA_NO_HALF2_OPERATORS__
--     CUDA host compiler  : /usr/bin/cc
--     NVCC --device-c     : OFF
--     USE_TENSORRT        : OFF
--   USE_ROCM              : OFF
--   USE_EIGEN_FOR_BLAS    : ON
--   USE_FBGEMM            : OFF
--     USE_FAKELOWP          : OFF
--   USE_KINETO            : OFF
--   USE_FFMPEG            : OFF
--   USE_GFLAGS            : OFF
--   USE_GLOG              : OFF
--   USE_LEVELDB           : OFF
--   USE_LITE_PROTO        : OFF
--   USE_LMDB              : OFF
--   USE_METAL             : OFF
--   USE_PYTORCH_METAL     : OFF
--   USE_FFTW              : OFF
--   USE_MKL               : OFF
--   USE_MKLDNN            : OFF
--   USE_NCCL              : ON
--     USE_SYSTEM_NCCL     : OFF
--   USE_NNPACK            : OFF
--   USE_NUMPY             : ON
--   USE_OBSERVERS         : ON
--   USE_OPENCL            : OFF
--   USE_OPENCV            : OFF
--   USE_OPENMP            : ON
--   USE_TBB               : OFF
--   USE_VULKAN            : OFF
--   USE_PROF              : OFF
--   USE_QNNPACK           : OFF
--   USE_PYTORCH_QNNPACK   : OFF
--   USE_REDIS             : OFF
--   USE_ROCKSDB           : OFF
--   USE_ZMQ               : OFF
--   USE_DISTRIBUTED       : ON
--     USE_MPI             : OFF
--     USE_GLOO            : ON
--     USE_TENSORPIPE      : ON
--   USE_DEPLOY           : OFF
--   Public Dependencies  : Threads::Threads
--   Private Dependencies : cpuinfo;fp16;gloo;tensorpipe;aten_op_header_gen;foxi_loader;rt;fmt::fmt-header-only;gcc_s;gcc;dl
-- Configuring done
-- Generating done
-- Build files have been written to: /pytorch/build
cmake --build . --target install --config Release -- -j 8
[41/3592] Building CXX object third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/extension_set.cc.o
FAILED: third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/extension_set.cc.o 
/usr/bin/c++ -DGOOGLE_PROTOBUF_CMAKE_BUILD -DHAVE_PTHREAD -Ithird_party/protobuf/cmake -I../third_party/protobuf/src -Wno-deprecated -fvisibility-inlines-hidden -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/extension_set.cc.o -MF third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/extension_set.cc.o.d -o third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/extension_set.cc.o -c ../third_party/protobuf/src/google/protobuf/extension_set.cc
c++: internal compiler error: Killed (program cc1plus)
Please submit a full bug report,
with preprocessed source if appropriate.
See <http://bugzilla.redhat.com/bugzilla> for instructions.
[42/3592] Building CXX object third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/generated_message_table_driven_lite.cc.o
FAILED: third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/generated_message_table_driven_lite.cc.o 
/usr/bin/c++ -DGOOGLE_PROTOBUF_CMAKE_BUILD -DHAVE_PTHREAD -Ithird_party/protobuf/cmake -I../third_party/protobuf/src -Wno-deprecated -fvisibility-inlines-hidden -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/generated_message_table_driven_lite.cc.o -MF third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/generated_message_table_driven_lite.cc.o.d -o third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/generated_message_table_driven_lite.cc.o -c ../third_party/protobuf/src/google/protobuf/generated_message_table_driven_lite.cc
c++: internal compiler error: Killed (program cc1plus)
Please submit a full bug report,
with preprocessed source if appropriate.
See <http://bugzilla.redhat.com/bugzilla> for instructions.
[43/3592] Building CXX object third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/generated_message_util.cc.o
FAILED: third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/generated_message_util.cc.o 
/usr/bin/c++ -DGOOGLE_PROTOBUF_CMAKE_BUILD -DHAVE_PTHREAD -Ithird_party/protobuf/cmake -I../third_party/protobuf/src -Wno-deprecated -fvisibility-inlines-hidden -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/generated_message_util.cc.o -MF third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/generated_message_util.cc.o.d -o third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/generated_message_util.cc.o -c ../third_party/protobuf/src/google/protobuf/generated_message_util.cc
c++: internal compiler error: Killed (program cc1plus)
Please submit a full bug report,
with preprocessed source if appropriate.
See <http://bugzilla.redhat.com/bugzilla> for instructions.
[44/3592] Building CXX object third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/util/json_util.cc.o
FAILED: third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/util/json_util.cc.o 
/usr/bin/c++ -DGOOGLE_PROTOBUF_CMAKE_BUILD -DHAVE_PTHREAD -Ithird_party/protobuf/cmake -I../third_party/protobuf/src -Wno-deprecated -fvisibility-inlines-hidden -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/util/json_util.cc.o -MF third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/util/json_util.cc.o.d -o third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/util/json_util.cc.o -c ../third_party/protobuf/src/google/protobuf/util/json_util.cc
c++: internal compiler error: Killed (program cc1plus)
Please submit a full bug report,
with preprocessed source if appropriate.
See <http://bugzilla.redhat.com/bugzilla> for instructions.
[47/3592] Building CXX object third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/message_lite.cc.o
FAILED: third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/message_lite.cc.o 
/usr/bin/c++ -DGOOGLE_PROTOBUF_CMAKE_BUILD -DHAVE_PTHREAD -Ithird_party/protobuf/cmake -I../third_party/protobuf/src -Wno-deprecated -fvisibility-inlines-hidden -fvisibility=hidden -fvisibility-inlines-hidden -O3 -DNDEBUG -fPIC -std=c++11 -MD -MT third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/message_lite.cc.o -MF third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/message_lite.cc.o.d -o third_party/protobuf/cmake/CMakeFiles/libprotobuf.dir/__/src/google/protobuf/message_lite.cc.o -c ../third_party/protobuf/src/google/protobuf/message_lite.cc
c++: internal compiler error: Killed (program cc1plus)
Please submit a full bug report,
with preprocessed source if appropriate.
See <http://bugzilla.redhat.com/bugzilla> for instructions.
^CTraceback (most recent call last):
  File "/usr/local/bin/ninja", line 8, in <module>
Traceback (most recent call last):
  File "/pytorch/setup.py", line 876, in <module>
    sys.exit(ninja())
  File "/usr/local/lib/python3.9/site-packages/ninja/__init__.py", line 50, in ninja
    raise SystemExit(_program('ninja', sys.argv[1:]))
  File "/usr/local/lib/python3.9/site-packages/ninja/__init__.py", line 46, in _program
    return subprocess.call([os.path.join(BIN_DIR, name)] + args)
  File "/usr/local/lib/python3.9/subprocess.py", line 351, in call
    return p.wait(timeout=timeout)
  File "/usr/local/lib/python3.9/subprocess.py", line 1189, in wait
    return self._wait(timeout=timeout)
  File "/usr/local/lib/python3.9/subprocess.py", line 1919, in _wait
    (pid, sts) = self._try_wait(0)
  File "/usr/local/lib/python3.9/subprocess.py", line 1877, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
    build_deps()
  File "/pytorch/setup.py", line 354, in build_deps
    build_caffe2(version=version,
  File "/pytorch/tools/build_pytorch_libs.py", line 58, in build_caffe2
    cmake.build(my_env)
  File "/pytorch/tools/setup_helpers/cmake.py", line 345, in build
    self.run(build_args, my_env)
  File "/pytorch/tools/setup_helpers/cmake.py", line 140, in run
    check_call(command, cwd=self.build_dir, env=env)
  File "/usr/local/lib/python3.9/subprocess.py", line 368, in check_call
    retcode = call(*popenargs, **kwargs)
  File "/usr/local/lib/python3.9/subprocess.py", line 351, in call
KeyboardInterrupt
    return p.wait(timeout=timeout)
  File "/usr/local/lib/python3.9/subprocess.py", line 1189, in wait
    return self._wait(timeout=timeout)
  File "/usr/local/lib/python3.9/subprocess.py", line 1919, in _wait
    (pid, sts) = self._try_wait(0)
  File "/usr/local/lib/python3.9/subprocess.py", line 1877, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
KeyboardInterrupt
^C
[root@47eaaa797bab pytorch]# git checkout v1.7.1
warning: unable to rmdir third_party/kineto: Directory not empty
Checking out files: 100% (4066/4066), done.
M       android/libs/fbjni
M       third_party/NNPACK
M       third_party/XNNPACK
M       third_party/cpuinfo
M       third_party/fbgemm
M       third_party/foxi
M       third_party/gloo
M       third_party/ideep
M       third_party/onnx
M       third_party/pthreadpool
M       third_party/pybind11
M       third_party/sleef
M       third_party/tensorpipe
Note: checking out 'v1.7.1'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 57bffc3... Disable autocast cache for tensor views as fix for #48049 (#48696) (#48936)
[root@47eaaa797bab pytorch]# python3 setup.py install
Building wheel torch-1.7.0a0
-- Building version 1.7.0a0
cmake --build . --target install --config Release -- -j 8
[0/1] Re-running CMake...
-- std::exception_ptr is supported.
-- Turning off deprecation warning due to glog.
-- Building using own protobuf under third_party per request.
-- Use custom protobuf build.
-- 
-- 3.11.4.0
-- Caffe2 protobuf include directory: $<BUILD_INTERFACE:/pytorch/third_party/protobuf/src>$<INSTALL_INTERFACE:include>
-- Trying to find preferred BLAS backend of choice: MKL
-- MKL_THREADING = OMP
-- MKL_THREADING = OMP
CMake Warning at cmake/Dependencies.cmake:148 (message):
  MKL could not be found.  Defaulting to Eigen
Call Stack (most recent call first):
  CMakeLists.txt:513 (include)


CMake Warning at cmake/Dependencies.cmake:172 (message):
  Preferred BLAS (MKL) cannot be found, now searching for a general BLAS
  library
Call Stack (most recent call first):
  CMakeLists.txt:513 (include)


-- MKL_THREADING = OMP
-- Checking for [mkl_intel_lp64 - mkl_gnu_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel_lp64 - mkl_intel_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel - mkl_gnu_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_intel - mkl_intel_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_gnu_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf_lp64 - mkl_intel_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_gnu_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_gf - mkl_intel_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_gnu_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel_lp64 - mkl_intel_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel - mkl_gnu_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_intel - mkl_intel_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_gnu_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf_lp64 - mkl_intel_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_gnu_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_gf - mkl_intel_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_gnu_thread - mkl_core - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel_lp64 - mkl_intel_thread - mkl_core - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel - mkl_gnu_thread - mkl_core - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_intel - mkl_intel_thread - mkl_core - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_gnu_thread - mkl_core - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf_lp64 - mkl_intel_thread - mkl_core - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_gnu_thread - mkl_core - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_gf - mkl_intel_thread - mkl_core - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_sequential - mkl_core - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel - mkl_sequential - mkl_core - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_sequential - mkl_core - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_sequential - mkl_core - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_core - gomp - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel - mkl_core - gomp - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_core - gomp - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_core - gomp - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_core - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel - mkl_core - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_core - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_core - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl - guide - pthread - m]
--   Library mkl: not found
-- MKL library not found
-- Checking for [Accelerate]
--   Library Accelerate: BLAS_Accelerate_LIBRARY-NOTFOUND
-- Checking for [vecLib]
--   Library vecLib: BLAS_vecLib_LIBRARY-NOTFOUND
-- Checking for [openblas]
--   Library openblas: BLAS_openblas_LIBRARY-NOTFOUND
-- Checking for [openblas - pthread - m]
--   Library openblas: BLAS_openblas_LIBRARY-NOTFOUND
-- Checking for [goto2 - gfortran]
--   Library goto2: BLAS_goto2_LIBRARY-NOTFOUND
-- Checking for [goto2 - gfortran - pthread]
--   Library goto2: BLAS_goto2_LIBRARY-NOTFOUND
-- Checking for [acml - gfortran]
--   Library acml: BLAS_acml_LIBRARY-NOTFOUND
-- Checking for [blis]
--   Library blis: BLAS_blis_LIBRARY-NOTFOUND
-- Checking for [ptf77blas - atlas - gfortran]
--   Library ptf77blas: BLAS_ptf77blas_LIBRARY-NOTFOUND
-- Checking for [blas]
--   Library blas: BLAS_blas_LIBRARY-NOTFOUND
-- Cannot find a library with BLAS API. Not using BLAS.
CMake Warning at third_party/cpuinfo/CMakeLists.txt:65 (MESSAGE):
  Target processor architecture "ppc64le" is not supported in cpuinfo.
  cpuinfo will compile, but cpuinfo_initialize() will always fail.


-- Found PythonInterp: /usr/local/bin/python3 (found version "3.9.2") 
-- git Version: v1.4.0-505be96a
-- Version: 1.4.0
-- Performing Test HAVE_STD_REGEX -- success
-- Performing Test HAVE_GNU_POSIX_REGEX -- failed to compile
-- Performing Test HAVE_POSIX_REGEX -- success
-- Performing Test HAVE_STEADY_CLOCK -- success
CMake Warning at cmake/Dependencies.cmake:698 (message):
  Turning USE_FAKELOWP off as it depends on USE_FBGEMM.
Call Stack (most recent call first):
  CMakeLists.txt:513 (include)


-- Using third party subdirectory Eigen.
-- Found PythonInterp: /usr/local/bin/python3 (found suitable version "3.9.2", minimum required is "3.0") 
-- Using third_party/pybind11.
-- pybind11 include dirs: /pytorch/cmake/../third_party/pybind11/include
-- Adding OpenMP CXX_FLAGS: -fopenmp
-- No OpenMP library needs to be linked against
-- Caffe2: CUDA detected: 10.2
-- Caffe2: CUDA nvcc is: /usr/local/cuda/bin/nvcc
-- Caffe2: CUDA toolkit directory: /usr/local/cuda
-- Caffe2: Header version is: 10.2
-- Found cuDNN: v8.1.1  (include: /usr/include, library: /usr/lib64/libcudnn.so)
-- Automatic GPU detection failed. Building for common architectures.
-- Autodetected CUDA architecture(s): 3.5;5.0;5.2;6.0;6.1;7.0;7.5;7.5+PTX
-- Added CUDA NVCC flags for: -gencode;arch=compute_35,code=sm_35;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_52,code=sm_52;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_75,code=compute_75
-- Automatic GPU detection failed. Building for common architectures.
-- Autodetected CUDA architecture(s): 3.5;5.0;5.2;6.0;6.1;7.0;7.5;7.5+PTX
CMake Warning at cmake/External/nccl.cmake:66 (message):
  Objcopy version is too old to support NCCL library slimming
Call Stack (most recent call first):
  cmake/Dependencies.cmake:1237 (include)
  CMakeLists.txt:513 (include)


-- Could NOT find CUB (missing: CUB_INCLUDE_DIR) 
-- Gloo build as SHARED library
-- Found CUDA: /usr/local/cuda (found suitable version "10.2", minimum required is "7.0") 
-- CUDA detected: 10.2
CMake Warning (dev) at /usr/local/share/cmake-3.18/Modules/FindPackageHandleStandardArgs.cmake:273 (message):
  The package name passed to `find_package_handle_standard_args` (NCCL) does
  not match the name of the calling package (nccl).  This can lead to
  problems in calling code that expects `find_package` result variables
  (e.g., `_FOUND`) to follow a certain pattern.
Call Stack (most recent call first):
  third_party/gloo/cmake/Modules/Findnccl.cmake:45 (find_package_handle_standard_args)
  third_party/gloo/cmake/Dependencies.cmake:128 (find_package)
  third_party/gloo/CMakeLists.txt:104 (include)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- Determining NCCL version from the header file: /usr/include/nccl.h
-- NCCL_MAJOR_VERSION: 2
-- Found NCCL (include: /usr/include, library: /lib64/libnccl.so)
-- Found CUDA: /usr/local/cuda (found version "10.2") 
-- summary of build options:
    Install prefix:  /pytorch/torch
    Target system:   Linux
    Compiler:
      C compiler:    /usr/bin/cc
      CFLAGS:          -fopenmp

Generated: /pytorch/build/third_party/onnx/onnx/onnx_onnx_torch-ml.proto
Generated: /pytorch/build/third_party/onnx/onnx/onnx-operators_onnx_torch-ml.proto
Generated: /pytorch/build/third_party/onnx/onnx/onnx-data_onnx_torch.proto
-- 
-- ******** Summary ********
--   CMake version         : 3.18.4
--   CMake command         : /usr/local/bin/cmake
--   System                : Linux
--   C++ compiler          : /usr/bin/c++
--   C++ compiler version  : 4.8.5
--   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -Wnon-virtual-dtor
--   Build type            : Release
--   Compile definitions   : ONNX_ML=1;ONNXIFI_ENABLE_EXT=1
--   CMAKE_PREFIX_PATH     : /usr/local/lib/python3.9/site-packages;/usr/local/cuda
--   CMAKE_INSTALL_PREFIX  : /pytorch/torch
--   CMAKE_MODULE_PATH     : /pytorch/cmake/Modules;/pytorch/cmake/public/../Modules_CUDA_fix
-- 
--   ONNX version          : 1.8.0
--   ONNX NAMESPACE        : onnx_torch
--   ONNX_BUILD_TESTS      : OFF
--   ONNX_BUILD_BENCHMARKS : OFF
--   ONNX_USE_LITE_PROTO   : OFF
--   ONNXIFI_DUMMY_BACKEND : OFF
--   ONNXIFI_ENABLE_EXT    : OFF
-- 
--   Protobuf compiler     : 
--   Protobuf includes     : 
--   Protobuf libraries    : 
--   BUILD_ONNX_PYTHON     : OFF
-- 
-- ******** Summary ********
--   CMake version         : 3.18.4
--   CMake command         : /usr/local/bin/cmake
--   System                : Linux
--   C++ compiler          : /usr/bin/c++
--   C++ compiler version  : 4.8.5
--   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -Wnon-virtual-dtor
--   Build type            : Release
--   Compile definitions   : ONNX_ML=1;ONNXIFI_ENABLE_EXT=1
--   CMAKE_PREFIX_PATH     : /usr/local/lib/python3.9/site-packages;/usr/local/cuda
--   CMAKE_INSTALL_PREFIX  : /pytorch/torch
--   CMAKE_MODULE_PATH     : /pytorch/cmake/Modules;/pytorch/cmake/public/../Modules_CUDA_fix
-- 
--   ONNX version          : 1.4.1
--   ONNX NAMESPACE        : onnx_torch
--   ONNX_BUILD_TESTS      : OFF
--   ONNX_BUILD_BENCHMARKS : OFF
--   ONNX_USE_LITE_PROTO   : OFF
--   ONNXIFI_DUMMY_BACKEND : OFF
-- 
--   Protobuf compiler     : 
--   Protobuf includes     : 
--   Protobuf libraries    : 
--   BUILD_ONNX_PYTHON     : OFF
-- Found CUDA with FP16 support, compiling with torch.cuda.HalfTensor
-- Adding -DNDEBUG to compile flags
-- MAGMA not found. Compiling without MAGMA support
-- Could not find hardware support for NEON on this machine.
-- No OMAP3 processor on this machine.
-- No OMAP4 processor on this machine.
-- MKL_THREADING = OMP
-- Checking for [mkl_intel_lp64 - mkl_gnu_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel_lp64 - mkl_intel_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel - mkl_gnu_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_intel - mkl_intel_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_gnu_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf_lp64 - mkl_intel_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_gnu_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_gf - mkl_intel_thread - mkl_core - gomp - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_gnu_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel_lp64 - mkl_intel_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel - mkl_gnu_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_intel - mkl_intel_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_gnu_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf_lp64 - mkl_intel_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_gnu_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_gf - mkl_intel_thread - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_gnu_thread - mkl_core - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel_lp64 - mkl_intel_thread - mkl_core - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel - mkl_gnu_thread - mkl_core - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_intel - mkl_intel_thread - mkl_core - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_gnu_thread - mkl_core - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf_lp64 - mkl_intel_thread - mkl_core - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_gnu_thread - mkl_core - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_gf - mkl_intel_thread - mkl_core - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_sequential - mkl_core - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel - mkl_sequential - mkl_core - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_sequential - mkl_core - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_sequential - mkl_core - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_core - gomp - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel - mkl_core - gomp - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_core - gomp - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_core - gomp - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_core - iomp5 - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl_intel_lp64 - mkl_core - pthread - m - dl]
--   Library mkl_intel_lp64: not found
-- Checking for [mkl_intel - mkl_core - pthread - m - dl]
--   Library mkl_intel: not found
-- Checking for [mkl_gf_lp64 - mkl_core - pthread - m - dl]
--   Library mkl_gf_lp64: not found
-- Checking for [mkl_gf - mkl_core - pthread - m - dl]
--   Library mkl_gf: not found
-- Checking for [mkl - guide - pthread - m]
--   Library mkl: not found
-- MKL library not found
-- Checking for [Accelerate]
--   Library Accelerate: BLAS_Accelerate_LIBRARY-NOTFOUND
-- Checking for [vecLib]
--   Library vecLib: BLAS_vecLib_LIBRARY-NOTFOUND
-- Checking for [openblas]
--   Library openblas: BLAS_openblas_LIBRARY-NOTFOUND
-- Checking for [openblas - pthread - m]
--   Library openblas: BLAS_openblas_LIBRARY-NOTFOUND
-- Checking for [goto2 - gfortran]
--   Library goto2: BLAS_goto2_LIBRARY-NOTFOUND
-- Checking for [goto2 - gfortran - pthread]
--   Library goto2: BLAS_goto2_LIBRARY-NOTFOUND
-- Checking for [acml - gfortran]
--   Library acml: BLAS_acml_LIBRARY-NOTFOUND
-- Checking for [blis]
--   Library blis: BLAS_blis_LIBRARY-NOTFOUND
-- Checking for [ptf77blas - atlas - gfortran]
--   Library ptf77blas: BLAS_ptf77blas_LIBRARY-NOTFOUND
-- Checking for [blas]
--   Library blas: BLAS_blas_LIBRARY-NOTFOUND
-- Cannot find a library with BLAS API. Not using BLAS.
-- LAPACK requires BLAS
-- Cannot find a library with LAPACK API. Not using LAPACK.
disabling ROCM because NOT USE_ROCM is set
-- MIOpen not found. Compiling without MIOpen support
disabling MKLDNN because USE_MKLDNN is not set
-- Version: 7.0.3
-- Build type: Release
-- CXX_STANDARD: 14
-- Required features: cxx_variadic_templates
-- GCC 4.8.5: Adding gcc and gcc_s libs to link line
-- don't use NUMA
-- Using ATen parallel backend: OMP
CMake Deprecation Warning at third_party/sleef/CMakeLists.txt:91 (cmake_policy):
  The OLD behavior for policy CMP0066 will be removed from a future version
  of CMake.

  The cmake-policies(7) manual explains that the OLD behaviors of all
  policies are deprecated and that a policy should be set to OLD only under
  specific short-term circumstances.  Projects should be ported to the NEW
  behavior and not rely on setting a policy to OLD.


-- Found OpenMP_C: -fopenmp (found version "4.5") 
-- Found OpenMP_CXX: -fopenmp (found version "4.5") 
-- Configuring build for SLEEF-v3.6.0
   Target system: Linux-4.19.121-linuxkit
   Target processor: ppc64le
   Host system: Linux-4.19.121-linuxkit
   Host processor: ppc64le
   Detected C compiler: GNU @ /usr/bin/cc
   CMake: 3.18.4
   Make program: /usr/local/bin/ninja
-- Using option `-Wall -Wno-unused -Wno-attributes -Wno-unused-result -Wno-psabi -ffp-contract=off -fno-math-errno -fno-trapping-math` to compile libsleef
-- Building shared libs : OFF
-- Building static test bins: OFF
-- MPFR : LIB_MPFR-NOTFOUND
-- GMP : LIBGMP-NOTFOUND
-- RT : /usr/lib64/librt.so
-- FFTW3 : LIBFFTW3-NOTFOUND
-- OPENSSL : 1.0.2k
-- SDE : SDE_COMMAND-NOTFOUND
-- RUNNING_ON_TRAVIS : 
-- COMPILER_SUPPORTS_OPENMP : 1
AT_INSTALL_INCLUDE_DIR include/ATen/core
core header install: /pytorch/build/aten/src/ATen/core/TensorBody.h
-- Include NCCL operators
-- Excluding FakeLowP operators
-- Excluding ideep operators as we are not using ideep
-- Excluding image processing operators due to no opencv
-- Excluding video processing operators due to no opencv
-- MPI operators skipped due to no MPI support
-- Include Observer library
-- /usr/bin/c++ /pytorch/torch/abi-check.cpp -o /pytorch/build/abi-check
-- Determined _GLIBCXX_USE_CXX11_ABI=1
-- Automatic GPU detection failed. Building for common architectures.
-- Autodetected CUDA architecture(s): 3.5;5.0;5.2;6.0;6.1;7.0;7.5;7.5+PTX
CMake Warning (dev) at /usr/local/share/cmake-3.18/Modules/FindPackageHandleStandardArgs.cmake:273 (message):
  The package name passed to `find_package_handle_standard_args` (OpenMP_C)
  does not match the name of the calling package (OpenMP).  This can lead to
  problems in calling code that expects `find_package` result variables
  (e.g., `_FOUND`) to follow a certain pattern.
Call Stack (most recent call first):
  cmake/Modules/FindOpenMP.cmake:565 (find_package_handle_standard_args)
  caffe2/CMakeLists.txt:925 (find_package)
This warning is for project developers.  Use -Wno-dev to suppress it.

CMake Warning (dev) at /usr/local/share/cmake-3.18/Modules/FindPackageHandleStandardArgs.cmake:273 (message):
  The package name passed to `find_package_handle_standard_args` (OpenMP_CXX)
  does not match the name of the calling package (OpenMP).  This can lead to
  problems in calling code that expects `find_package` result variables
  (e.g., `_FOUND`) to follow a certain pattern.
Call Stack (most recent call first):
  cmake/Modules/FindOpenMP.cmake:565 (find_package_handle_standard_args)
  caffe2/CMakeLists.txt:925 (find_package)
This warning is for project developers.  Use -Wno-dev to suppress it.

-- pytorch is compiling with OpenMP. 
OpenMP CXX_FLAGS: -fopenmp. 
OpenMP libraries: /usr/lib64/libgomp.so;/usr/lib64/libpthread.so.
-- Caffe2 is compiling with OpenMP. 
OpenMP CXX_FLAGS: -fopenmp. 
OpenMP libraries: /usr/lib64/libgomp.so;/usr/lib64/libpthread.so.
-- Using lib/python3.9/site-packages as python relative installation path
CMake Warning at CMakeLists.txt:788 (message):
  Generated cmake files are only fully tested if one builds with system glog,
  gflags, and protobuf.  Other settings may generate files that are not well
  tested.


-- 
-- ******** Summary ********
-- General:
--   CMake version         : 3.18.4
--   CMake command         : /usr/local/bin/cmake
--   System                : Linux
--   C++ compiler          : /usr/bin/c++
--   C++ compiler id       : GNU
--   C++ compiler version  : 4.8.5
--   BLAS                  : MKL
--   CXX flags             :  -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format
--   Build type            : Release
--   Compile definitions   : ONNX_ML=1;ONNXIFI_ENABLE_EXT=1;ONNX_NAMESPACE=onnx_torch;HAVE_MMAP=1;_FILE_OFFSET_BITS=64;HAVE_SHM_OPEN=1;HAVE_SHM_UNLINK=1;HAVE_MALLOC_USABLE_SIZE=1;USE_EXTERNAL_MZCRC;MINIZ_DISABLE_ZIP_READER_CRC32_CHECKS
--   CMAKE_PREFIX_PATH     : /usr/local/lib/python3.9/site-packages;/usr/local/cuda
--   CMAKE_INSTALL_PREFIX  : /pytorch/torch
-- 
--   TORCH_VERSION         : 1.9.0
--   CAFFE2_VERSION        : 1.9.0
--   BUILD_CAFFE2          : ON
--   BUILD_CAFFE2_OPS      : ON
--   BUILD_CAFFE2_MOBILE   : OFF
--   BUILD_STATIC_RUNTIME_BENCHMARK: OFF
--   BUILD_BINARY          : OFF
--   BUILD_CUSTOM_PROTOBUF : ON
--     Link local protobuf : ON
--   BUILD_DOCS            : OFF
--   BUILD_PYTHON          : True
--     Python version      : 3.9.2
--     Python executable   : /usr/local/bin/python3
--     Pythonlibs version  : 3.9.2
--     Python library      : /usr/local/lib/libpython3.9.a
--     Python includes     : /usr/local/include/python3.9
--     Python site-packages: lib/python3.9/site-packages
--   BUILD_SHARED_LIBS     : ON
--   BUILD_TEST            : True
--   BUILD_JNI             : OFF
--   BUILD_MOBILE_AUTOGRAD : OFF
--   INTERN_BUILD_MOBILE   : 
--   USE_ASAN              : OFF
--   USE_CPP_CODE_COVERAGE : OFF
--   USE_CUDA              : ON
--     CUDA static link    : OFF
--     USE_CUDNN           : ON
--     CUDA version        : 10.2
--     cuDNN version       : 8.1.1
--     CUDA root directory : /usr/local/cuda
--     CUDA library        : /usr/local/cuda/lib64/stubs/libcuda.so
--     cudart library      : /usr/local/cuda/lib64/libcudart.so
--     cublas library      : /usr/local/cuda/lib64/libcublas.so
--     cufft library       : /usr/local/cuda/lib64/libcufft.so
--     curand library      : /usr/local/cuda/lib64/libcurand.so
--     cuDNN library       : /usr/lib64/libcudnn.so
--     nvrtc               : /usr/local/cuda/lib64/libnvrtc.so
--     CUDA include path   : /usr/local/cuda/include
--     NVCC executable     : /usr/local/cuda/bin/nvcc
--     NVCC flags          : -Xfatbin;-compress-all;-DONNX_NAMESPACE=onnx_torch;-gencode;arch=compute_35,code=sm_35;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_52,code=sm_52;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_75,code=compute_75;-Xcudafe;--diag_suppress=cc_clobber_ignored;-Xcudafe;--diag_suppress=integer_sign_change;-Xcudafe;--diag_suppress=useless_using_declaration;-Xcudafe;--diag_suppress=set_but_not_used;-Xcudafe;--diag_suppress=field_without_dll_interface;-Xcudafe;--diag_suppress=base_class_has_different_dll_interface;-Xcudafe;--diag_suppress=dll_interface_conflict_none_assumed;-Xcudafe;--diag_suppress=dll_interface_conflict_dllexport_assumed;-Xcudafe;--diag_suppress=implicit_return_from_non_void_function;-Xcudafe;--diag_suppress=unsigned_compare_with_zero;-Xcudafe;--diag_suppress=declared_but_not_referenced;-Xcudafe;--diag_suppress=bad_friend_decl;-std=c++14;-Xcompiler;-fPIC;--expt-relaxed-constexpr;--expt-extended-lambda;-Wno-deprecated-gpu-targets;--expt-extended-lambda;-Xcompiler;-fPIC;-DCUDA_HAS_FP16=1;-D__CUDA_NO_HALF_OPERATORS__;-D__CUDA_NO_HALF_CONVERSIONS__;-D__CUDA_NO_HALF2_OPERATORS__
--     CUDA host compiler  : /usr/bin/cc
--     NVCC --device-c     : OFF
--     USE_TENSORRT        : OFF
--   USE_ROCM              : OFF
--   USE_EIGEN_FOR_BLAS    : ON
--   USE_FBGEMM            : OFF
--     USE_FAKELOWP          : OFF
--   USE_FFMPEG            : OFF
--   USE_GFLAGS            : OFF
--   USE_GLOG              : OFF
--   USE_LEVELDB           : OFF
--   USE_LITE_PROTO        : OFF
--   USE_LMDB              : OFF
--   USE_METAL             : OFF
--   USE_MKL               : OFF
--   USE_MKLDNN            : OFF
--   USE_NCCL              : ON
--     USE_SYSTEM_NCCL     : OFF
--   USE_NNPACK            : OFF
--   USE_NUMPY             : ON
--   USE_OBSERVERS         : ON
--   USE_OPENCL            : OFF
--   USE_OPENCV            : OFF
--   USE_OPENMP            : ON
--   USE_TBB               : OFF
--   USE_VULKAN            : OFF
--   USE_PROF              : OFF
--   USE_QNNPACK           : OFF
--   USE_PYTORCH_QNNPACK   : OFF
--   USE_REDIS             : OFF
--   USE_ROCKSDB           : OFF
--   USE_ZMQ               : OFF
--   USE_DISTRIBUTED       : ON
--     USE_MPI             : OFF
--     USE_GLOO            : ON
--     USE_TENSORPIPE      : ON
--   Public Dependencies  : Threads::Threads
--   Private Dependencies : cpuinfo;fp16;gloo;tensorpipe;aten_op_header_gen;foxi_loader;rt;fmt::fmt-header-only;gcc_s;gcc;dl
-- Configuring done
-- Generating done
-- Build files have been written to: /pytorch/build
[150/3378] Building C object confu-deps/cpuinfo/CMakeFiles/cpuinfo_internals.dir/src/api.c.o
In file included from ../third_party/cpuinfo/src/cpuinfo/internal-api.h:11:0,
                 from ../third_party/cpuinfo/src/api.c:5:
../third_party/cpuinfo/src/api.c: In function 'cpuinfo_get_current_processor':
../third_party/cpuinfo/src/api.c:319:23: warning: implicit declaration of function 'syscall' [-Wimplicit-function-declaration]
   if CPUINFO_UNLIKELY(syscall(__NR_getcpu, &cpu, NULL, NULL) != 0) {
                       ^
../third_party/cpuinfo/src/cpuinfo/common.h:16:59: note: in definition of macro 'CPUINFO_UNLIKELY'
  #define CPUINFO_UNLIKELY(condition) (__builtin_expect(!!(condition), 0))
                                                           ^~~~~~~~~
[153/3378] Building C object confu-deps/cpuinfo/CMakeFiles/cpuinfo.dir/src/api.c.o
In file included from ../third_party/cpuinfo/src/cpuinfo/internal-api.h:11:0,
                 from ../third_party/cpuinfo/src/api.c:5:
../third_party/cpuinfo/src/api.c: In function 'cpuinfo_get_current_processor':
../third_party/cpuinfo/src/api.c:319:23: warning: implicit declaration of function 'syscall' [-Wimplicit-function-declaration]
   if CPUINFO_UNLIKELY(syscall(__NR_getcpu, &cpu, NULL, NULL) != 0) {
                       ^
../third_party/cpuinfo/src/cpuinfo/common.h:16:59: note: in definition of macro 'CPUINFO_UNLIKELY'
  #define CPUINFO_UNLIKELY(condition) (__builtin_expect(!!(condition), 0))
                                                           ^~~~~~~~~
[220/3378] Performing build step for 'nccl_external'
/usr/bin/make -C src build BUILDDIR=/pytorch/build/nccl
make[1]: Entering directory `/pytorch/third_party/nccl/nccl/src'
make[2]: Entering directory `/pytorch/third_party/nccl/nccl/src/collectives/device'
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_sum_i8.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_sum_u8.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_sum_i32.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_sum_u32.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_sum_i64.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_sum_u64.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_sum_f16.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_sum_f32.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_sum_f64.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_prod_i8.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_prod_u8.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_prod_i32.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_prod_u32.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_prod_i64.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_prod_u64.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_prod_f16.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_prod_f32.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_prod_f64.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_min_i8.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_min_u8.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_min_i32.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_min_u32.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_min_i64.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_min_u64.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_min_f16.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_min_f32.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_min_f64.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_max_i8.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_max_u8.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_max_i32.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_max_u32.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_max_i64.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_max_u64.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_max_f16.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_max_f32.o
Compiling  all_reduce.cu                       > /pytorch/build/nccl/obj/collectives/device/all_reduce_max_f64.o
Compiling  reduce.cu                           > /pytorch/build/nccl/obj/collectives/device/reduce_sum_i8.o
Compiling  reduce.cu                           > /pytorch/build/nccl/obj/collectives/device/reduce_sum_u64.o
Compiling  reduce_scatter.cu                   > /pytorch/build/nccl/obj/collectives/device/reduce_scatter_sum_u64.o
Archiving  objects                             > /pytorch/build/nccl/obj/collectives/device/colldevice.a
make[2]: Leaving directory `/pytorch/third_party/nccl/nccl/src/collectives/device'
Linking    libnccl.so.2.7.8                    > /pytorch/build/nccl/lib/libnccl.so.2.7.8
Archiving  libnccl_static.a                    > /pytorch/build/nccl/lib/libnccl_static.a
/pytorch/third_party/nccl/nccl/src
make[1]: Leaving directory `/pytorch/third_party/nccl/nccl/src'
[330/3378] Running gen_proto.py on onnx/onnx.in.proto
Processing /pytorch/third_party/onnx/onnx/onnx.in.proto
Writing /pytorch/build/third_party/onnx/onnx/onnx_onnx_torch-ml.proto
Writing /pytorch/build/third_party/onnx/onnx/onnx_onnx_torch-ml.proto3
Writing /pytorch/build/third_party/onnx/onnx/onnx-ml.pb.h
generating /pytorch/build/third_party/onnx/onnx/onnx_pb.py
[332/3378] Running gen_proto.py on onnx/onnx-operators.in.proto
Processing /pytorch/third_party/onnx/onnx/onnx-operators.in.proto
Writing /pytorch/build/third_party/onnx/onnx/onnx-operators_onnx_torch-ml.proto
Writing /pytorch/build/third_party/onnx/onnx/onnx-operators_onnx_torch-ml.proto3
Writing /pytorch/build/third_party/onnx/onnx/onnx-operators-ml.pb.h
generating /pytorch/build/third_party/onnx/onnx/onnx_operators_pb.py
[335/3378] Running gen_proto.py on onnx/onnx-data.in.proto
Processing /pytorch/third_party/onnx/onnx/onnx-data.in.proto
Writing /pytorch/build/third_party/onnx/onnx/onnx-data_onnx_torch.proto
Writing /pytorch/build/third_party/onnx/onnx/onnx-data_onnx_torch.proto3
Writing /pytorch/build/third_party/onnx/onnx/onnx-data.pb.h
generating /pytorch/build/third_party/onnx/onnx/onnx_data_pb.py
[351/3378] Building CXX object third_party/onnx/CMakeFiles/onnx.dir/onnx/checker.cc.o
In file included from ../third_party/onnx/onnx/defs/shape_inference.h:4:0,
                 from ../third_party/onnx/onnx/defs/schema.h:24,
                 from ../third_party/onnx/onnx/checker.h:7,
                 from ../third_party/onnx/onnx/checker.cc:1:
../third_party/onnx/onnx/proto_utils.h: In instantiation of 'bool onnx_torch::ParseProtoFromBytes(Proto*, const char*, size_t) [with Proto = onnx_torch::ModelProto; size_t = long unsigned int]':
../third_party/onnx/onnx/checker.cc:890:61:   required from here
../third_party/onnx/onnx/proto_utils.h:34:34: warning: 'void google::protobuf::io::CodedInputStream::SetTotalBytesLimit(int, int)' is deprecated: Please use the single parameter version of SetTotalBytesLimit(). The second parameter is ignored. [-Wdeprecated-declarations]
   coded_stream.SetTotalBytesLimit((2048LL << 20) - 1, 512LL << 20);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from third_party/onnx/onnx/onnx_onnx_torch-ml.pb.h:23:0,
                 from third_party/onnx/onnx/onnx-ml.pb.h:2,
                 from ../third_party/onnx/onnx/onnx_pb.h:50,
                 from ../third_party/onnx/onnx/onnx-operators_pb.h:6,
                 from ../third_party/onnx/onnx/defs/attr_proto_util.h:6,
                 from ../third_party/onnx/onnx/defs/function.h:11,
                 from ../third_party/onnx/onnx/checker.h:6,
                 from ../third_party/onnx/onnx/checker.cc:1:
../third_party/protobuf/src/google/protobuf/io/coded_stream.h:397:8: note: declared here
   void SetTotalBytesLimit(int total_bytes_limit, int) {
        ^~~~~~~~~~~~~~~~~~
[398/3378] Building CXX object third_party/onnx/CMakeFiles/onnx.dir/onnx/shape_inference/implementation.cc.o
In file included from ../third_party/onnx/onnx/defs/shape_inference.h:4:0,
                 from ../third_party/onnx/onnx/defs/schema.h:24,
                 from ../third_party/onnx/onnx/shape_inference/implementation.h:4,
                 from ../third_party/onnx/onnx/shape_inference/implementation.cc:1:
../third_party/onnx/onnx/proto_utils.h: In instantiation of 'bool onnx_torch::ParseProtoFromBytes(Proto*, const char*, size_t) [with Proto = onnx_torch::ModelProto; size_t = long unsigned int]':
../third_party/onnx/onnx/shape_inference/implementation.cc:407:61:   required from here
../third_party/onnx/onnx/proto_utils.h:34:34: warning: 'void google::protobuf::io::CodedInputStream::SetTotalBytesLimit(int, int)' is deprecated: Please use the single parameter version of SetTotalBytesLimit(). The second parameter is ignored. [-Wdeprecated-declarations]
   coded_stream.SetTotalBytesLimit((2048LL << 20) - 1, 512LL << 20);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from third_party/onnx/onnx/onnx_onnx_torch-ml.pb.h:23:0,
                 from third_party/onnx/onnx/onnx-ml.pb.h:2,
                 from ../third_party/onnx/onnx/onnx_pb.h:50,
                 from ../third_party/onnx/onnx/onnx-operators_pb.h:6,
                 from ../third_party/onnx/onnx/defs/attr_proto_util.h:6,
                 from ../third_party/onnx/onnx/defs/function.h:11,
                 from ../third_party/onnx/onnx/shape_inference/implementation.h:3,
                 from ../third_party/onnx/onnx/shape_inference/implementation.cc:1:
../third_party/protobuf/src/google/protobuf/io/coded_stream.h:397:8: note: declared here
   void SetTotalBytesLimit(int total_bytes_limit, int) {
        ^~~~~~~~~~~~~~~~~~
[1176/3378] Generating include/renamevsx.h
Generating renamevsx.h: mkrename finz_ 2 4 vsx
[1178/3378] Generating include/renamevsxnofma.h
Generating renamevsxnofma.h: mkrename cinz_ 2 4 vsxnofma
[1179/3378] Generating include/renamepurec_scalar.h
Generating renamepurec_scalar.h: mkrename cinz_ 1 1 purec
[1180/3378] Generating include/renamepurecfma_scalar.h
Generating renamepurecfma_scalar.h: mkrename finz_ 1 1 purecfma
[1181/3378] Generating ../../../include/sleef.h
Generating sleef.h: mkrename finz_ 2 4 SLEEF_VECTOR_DOUBLE SLEEF_VECTOR_FLOAT SLEEF_VECTOR_INT SLEEF_VECTOR_INT __VSX__
Generating sleef.h: mkrename finz_ 2 4 SLEEF_VECTOR_DOUBLE SLEEF_VECTOR_FLOAT SLEEF_VECTOR_INT SLEEF_VECTOR_INT __VSX__ vsx
Generating sleef.h: mkrename cinz_ 2 4 SLEEF_VECTOR_DOUBLE SLEEF_VECTOR_FLOAT SLEEF_VECTOR_INT SLEEF_VECTOR_INT __VSX__ vsxnofma
Generating sleef.h: mkrename finz_ 2 4 SLEEF_VECTOR_DOUBLE SLEEF_VECTOR_FLOAT SLEEF_VECTOR_INT SLEEF_VECTOR_INT __VSX__ vsx3
Generating sleef.h: mkrename cinz_ 2 4 SLEEF_VECTOR_DOUBLE SLEEF_VECTOR_FLOAT SLEEF_VECTOR_INT SLEEF_VECTOR_INT __VSX__ vsx3nofma
Generating sleef.h: mkrename cinz_ 1 1 double float int32_t int32_t __STDC__ purec
Generating sleef.h: mkrename finz_ 1 1 double float int32_t int32_t FP_FAST_FMA purecfma
[1182/3378] Generating include/renamecuda.h
Generating renamecuda.h: mkrename finz_ 1 1 cuda
[1229/3378] Generating ../../../torch/_C/__init__.pyi, ../../../torch/_C/_VariableFunctions.pyi, ../../../torch/nn/functional.pyi
Writing ./torch/_C/__init__.pyi
Writing ./torch/_C/_VariableFunctions.pyi
Writing ./torch/_VF.pyi
Writing ./torch/nn/functional.pyi
Writing ./torch/_C/_nn.pyi
[1230/3378] Generating contrib/aten/aten_op.h
Skipping rename Because of Arg: c10::optional<DimnameList> (DimnameList) 
Skipping align_to Because of Arg: DimnameList (DimnameList) 
Skipping align_to Because of Arg: DimnameList (DimnameList) 
Skipping refine_names Because of Arg: DimnameList (DimnameList) 
Skipping _cudnn_rnn_backward Because of Arg: std::array<bool,4> (std::array<bool,4>) 
Skipping _cudnn_init_dropout_state because it is a factory method
Skipping _fused_dropout Because of Arg: c10::optional<Generator> (Generator) 
Skipping _sobol_engine_draw Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping all Because of Arg: Dimname (Dimname) 
Skipping all Because of Arg: Dimname (Dimname) 
Skipping any Because of Arg: Dimname (Dimname) 
Skipping any Because of Arg: Dimname (Dimname) 
Skipping arange because it is a factory method
Skipping argmax Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping argmax Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping argmin Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping argmin Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping as_strided Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping bartlett_window because it is a factory method
Skipping bernoulli Because of Arg: c10::optional<Generator> (Generator) 
Skipping bernoulli Because of Arg: c10::optional<Generator> (Generator) 
Skipping blackman_window because it is a factory method
Skipping cat Because of Arg: Dimname (Dimname) 
Skipping clamp Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping clamp Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping clip Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping clip Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping contiguous Because of Arg: MemoryFormat (MemoryFormat) 
Skipping count_nonzero Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping cummax Because of Arg: Dimname (Dimname) 
Skipping cummin Because of Arg: Dimname (Dimname) 
Skipping cumprod Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping cumprod Because of Arg: Dimname (Dimname) 
Skipping cumprod Because of Arg: Dimname (Dimname) 
Skipping cumsum Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping cumsum Because of Arg: Dimname (Dimname) 
Skipping cumsum Because of Arg: Dimname (Dimname) 
Skipping diagonal Because of Arg: Dimname (Dimname) 
Skipping diagonal Because of Arg: Dimname (Dimname) 
Skipping einsum Because of Arg: std::string (std::string) 
Skipping empty_meta because it is a factory method
Skipping empty because it is a factory method
Skipping new_empty because it is a factory method
Skipping new_full because it is a factory method
Skipping new_zeros because it is a factory method
Skipping _empty_affine_quantized because it is a factory method
Skipping _empty_per_channel_affine_quantized because it is a factory method
Skipping empty_like because it is a factory method
Skipping empty_strided because it is a factory method
Skipping eye because it is a factory method
Skipping flatten Because of Arg: Dimname (Dimname) 
Skipping flatten Because of Arg: Dimname (Dimname) 
Skipping flatten Because of Arg: DimnameList (DimnameList) 
Skipping unflatten Because of Arg: c10::optional<DimnameList> (DimnameList) 
Skipping unflatten Because of Arg: Dimname (Dimname) 
Skipping full because it is a factory method
Skipping full_like because it is a factory method
Skipping from_file because it is a factory method
Skipping hann_window because it is a factory method
Skipping hamming_window because it is a factory method
Skipping kaiser_window because it is a factory method
Skipping index_copy Because of Arg: Dimname (Dimname) 
Skipping kthvalue Because of Arg: Dimname (Dimname) 
Skipping kthvalue Because of Arg: Dimname (Dimname) 
Skipping fbgemm_linear_quantize_weight Because of Ret: double (double)
Skipping linspace because it is a factory method
Skipping logspace because it is a factory method
Skipping log_softmax Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping log_softmax Because of Arg: Dimname (Dimname) 
Skipping log_softmax Because of Arg: Dimname (Dimname) 
Skipping logcumsumexp Because of Arg: Dimname (Dimname) 
Skipping logsumexp Because of Arg: DimnameList (DimnameList) 
Skipping logsumexp Because of Arg: DimnameList (DimnameList) 
Skipping max Because of Arg: Dimname (Dimname) 
Skipping max Because of Arg: Dimname (Dimname) 
Skipping mean Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping mean Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping mean Because of Arg: DimnameList (DimnameList) 
Skipping mean Because of Arg: DimnameList (DimnameList) 
Skipping mean Because of Arg: DimnameList (DimnameList) 
Skipping median Because of Arg: Dimname (Dimname) 
Skipping median Because of Arg: Dimname (Dimname) 
Skipping min Because of Arg: Dimname (Dimname) 
Skipping min Because of Arg: Dimname (Dimname) 
Skipping miopen_rnn_backward Because of Arg: std::array<bool,4> (std::array<bool,4>) 
Skipping mode Because of Arg: Dimname (Dimname) 
Skipping mode Because of Arg: Dimname (Dimname) 
Skipping ones because it is a factory method
Skipping ones_like because it is a factory method
Skipping cdist Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping _cdist_forward Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping scalar_tensor because it is a factory method
Skipping rand because it is a factory method
Skipping rand_like because it is a factory method
Skipping randint because it is a factory method
Skipping randint_like because it is a factory method
Skipping randn because it is a factory method
Skipping randn_like because it is a factory method
Skipping randperm because it is a factory method
Skipping range because it is a factory method
Skipping repeat_interleave Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping repeat_interleave Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping rrelu Because of Arg: c10::optional<Generator> (Generator) 
Skipping select Because of Arg: Dimname (Dimname) 
Skipping logit Because of Arg: c10::optional<double> (double) 
Skipping size Because of Arg: Dimname (Dimname) 
Skipping softmax Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping softmax Because of Arg: Dimname (Dimname) 
Skipping softmax Because of Arg: Dimname (Dimname) 
Skipping squeeze Because of Arg: Dimname (Dimname) 
Skipping stft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping stft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping stft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping stft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping stft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping stft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping istft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping istft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping istft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping istft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping istft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping istft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping istft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping istft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping stride Because of Arg: Dimname (Dimname) 
Skipping sum Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping sum Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping sum Because of Arg: DimnameList (DimnameList) 
Skipping sum Because of Arg: DimnameList (DimnameList) 
Skipping sum Because of Arg: DimnameList (DimnameList) 
Skipping nansum Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping nansum Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping std_mean Because of Arg: DimnameList (DimnameList) 
Skipping std_mean Because of Arg: DimnameList (DimnameList) 
Skipping std_mean Because of Arg: DimnameList (DimnameList) 
Skipping std Because of Arg: DimnameList (DimnameList) 
Skipping std Because of Arg: DimnameList (DimnameList) 
Skipping std Because of Arg: DimnameList (DimnameList) 
Skipping prod Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping prod Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping prod Because of Arg: Dimname (Dimname) 
Skipping prod Because of Arg: Dimname (Dimname) 
Skipping prod Because of Arg: Dimname (Dimname) 
Skipping transpose Because of Arg: Dimname (Dimname) 
Skipping unique_consecutive Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping vander Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping vander Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping var Because of Arg: DimnameList (DimnameList) 
Skipping var Because of Arg: DimnameList (DimnameList) 
Skipping var Because of Arg: DimnameList (DimnameList) 
Skipping var_mean Because of Arg: DimnameList (DimnameList) 
Skipping var_mean Because of Arg: DimnameList (DimnameList) 
Skipping var_mean Because of Arg: DimnameList (DimnameList) 
Skipping zeros because it is a factory method
Skipping zeros_like because it is a factory method
Skipping _standard_gamma Because of Arg: c10::optional<Generator> (Generator) 
Skipping _sample_dirichlet Because of Arg: c10::optional<Generator> (Generator) 
Skipping poisson Because of Arg: c10::optional<Generator> (Generator) 
Skipping binomial Because of Arg: c10::optional<Generator> (Generator) 
Skipping native_norm Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping _sparse_sum Because of Arg: ScalarType (ScalarType) 
Skipping _sparse_sum Because of Arg: ScalarType (ScalarType) 
Skipping _sparse_softmax Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping _sparse_softmax Because of Arg: Dimname (Dimname) 
Skipping _sparse_softmax Because of Arg: Dimname (Dimname) 
Skipping _sparse_log_softmax Because of Arg: c10::optional<ScalarType> (ScalarType) 
Skipping _sparse_log_softmax Because of Arg: Dimname (Dimname) 
Skipping _sparse_log_softmax Because of Arg: Dimname (Dimname) 
Skipping norm Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping norm Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping norm Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping norm Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping norm Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping norm Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping norm Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping clone Because of Arg: c10::optional<MemoryFormat> (MemoryFormat) 
Skipping sparse_coo_tensor because it is a factory method
Skipping _sparse_coo_tensor_unsafe because it is a factory method
Skipping _sparse_coo_tensor_with_dims because it is a factory method
Skipping _sparse_coo_tensor_with_dims_and_tensors because it is a factory method
Skipping unbind Because of Arg: Dimname (Dimname) 
Skipping quantize_per_tensor Because of Arg: ScalarType (ScalarType) 
Skipping quantize_per_tensor Because of Arg: ScalarType (ScalarType) 
Skipping quantize_per_channel Because of Arg: ScalarType (ScalarType) 
Skipping q_scale Because of Ret: double (double)
Skipping qscheme Because of Ret: QScheme (QScheme)
Skipping _choose_qparams_per_tensor Because of Ret: double (double)
Skipping _choose_qparams_per_tensor Because of Ret: double (double)
Skipping choose_qparams_optimized Because of Ret: double (double)
Skipping to because it is a factory method
Skipping result_type Because of Ret: ScalarType (ScalarType)
Skipping result_type Because of Ret: ScalarType (ScalarType)
Skipping result_type Because of Ret: ScalarType (ScalarType)
Skipping result_type Because of Ret: ScalarType (ScalarType)
Skipping can_cast Because of Arg: ScalarType (ScalarType) 
Skipping promote_types Because of Ret: ScalarType (ScalarType)
Skipping index_add Because of Arg: Dimname (Dimname) 
Skipping index_fill Because of Arg: Dimname (Dimname) 
Skipping index_fill Because of Arg: Dimname (Dimname) 
Skipping scatter Because of Arg: Dimname (Dimname) 
Skipping scatter Because of Arg: Dimname (Dimname) 
Skipping scatter_add Because of Arg: Dimname (Dimname) 
Skipping cross Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping tril_indices because it is a factory method
Skipping triu_indices because it is a factory method
Skipping index_select Because of Arg: Dimname (Dimname) 
Skipping gather Because of Arg: Dimname (Dimname) 
Skipping gather Because of Arg: Dimname (Dimname) 
Skipping multinomial Because of Arg: c10::optional<Generator> (Generator) 
Skipping _multinomial_alias_draw Because of Arg: c10::optional<Generator> (Generator) 
Skipping quantile Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping quantile Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping quantile Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping quantile Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping nanquantile Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping nanquantile Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping nanquantile Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping nanquantile Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping sort Because of Arg: Dimname (Dimname) 
Skipping sort Because of Arg: Dimname (Dimname) 
Skipping argsort Because of Arg: Dimname (Dimname) 
Skipping argsort Because of Arg: Dimname (Dimname) 
Skipping normal because it is a factory method
Skipping _foreach_add_scalar_list Because of Arg: ArrayRef<double> (ArrayRef<double>) 
Skipping _foreach_sub_scalar_list Because of Arg: ArrayRef<double> (ArrayRef<double>) 
Skipping _foreach_div_scalar_list Because of Arg: ArrayRef<double> (ArrayRef<double>) 
Skipping _foreach_mul_scalar_list Because of Arg: ArrayRef<double> (ArrayRef<double>) 
Skipping rrelu_with_noise Because of Arg: c10::optional<Generator> (Generator) 
Skipping avg_pool2d Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping avg_pool2d_backward Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping avg_pool3d Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping avg_pool3d_backward Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping upsample_linear1d Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping upsample_linear1d_backward Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping upsample_bilinear2d Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping upsample_bilinear2d_backward Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping upsample_trilinear3d Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping upsample_trilinear3d_backward Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping upsample_bicubic2d Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping upsample_bicubic2d_backward Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping upsample_nearest1d Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping upsample_nearest1d_backward Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping upsample_nearest2d Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping upsample_nearest2d_backward Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping upsample_nearest3d Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping upsample_nearest3d_backward Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping upsample_linear1d Because of Arg: c10::optional<double> (double) 
Skipping upsample_linear1d_backward Because of Arg: c10::optional<double> (double) 
Skipping upsample_bilinear2d Because of Arg: c10::optional<double> (double) 
Skipping upsample_bilinear2d Because of Arg: c10::optional<double> (double) 
Skipping upsample_bilinear2d_backward Because of Arg: c10::optional<double> (double) 
Skipping upsample_bilinear2d_backward Because of Arg: c10::optional<double> (double) 
Skipping upsample_bicubic2d Because of Arg: c10::optional<double> (double) 
Skipping upsample_bicubic2d Because of Arg: c10::optional<double> (double) 
Skipping upsample_bicubic2d_backward Because of Arg: c10::optional<double> (double) 
Skipping upsample_bicubic2d_backward Because of Arg: c10::optional<double> (double) 
Skipping upsample_trilinear3d Because of Arg: c10::optional<double> (double) 
Skipping upsample_trilinear3d Because of Arg: c10::optional<double> (double) 
Skipping upsample_trilinear3d Because of Arg: c10::optional<double> (double) 
Skipping upsample_trilinear3d_backward Because of Arg: c10::optional<double> (double) 
Skipping upsample_trilinear3d_backward Because of Arg: c10::optional<double> (double) 
Skipping upsample_trilinear3d_backward Because of Arg: c10::optional<double> (double) 
Skipping upsample_nearest1d Because of Arg: c10::optional<double> (double) 
Skipping upsample_nearest1d_backward Because of Arg: c10::optional<double> (double) 
Skipping upsample_nearest2d Because of Arg: c10::optional<double> (double) 
Skipping upsample_nearest2d Because of Arg: c10::optional<double> (double) 
Skipping upsample_nearest2d_backward Because of Arg: c10::optional<double> (double) 
Skipping upsample_nearest2d_backward Because of Arg: c10::optional<double> (double) 
Skipping upsample_nearest3d Because of Arg: c10::optional<double> (double) 
Skipping upsample_nearest3d Because of Arg: c10::optional<double> (double) 
Skipping upsample_nearest3d Because of Arg: c10::optional<double> (double) 
Skipping upsample_nearest3d_backward Because of Arg: c10::optional<double> (double) 
Skipping upsample_nearest3d_backward Because of Arg: c10::optional<double> (double) 
Skipping upsample_nearest3d_backward Because of Arg: c10::optional<double> (double) 
Skipping logit_backward Because of Arg: c10::optional<double> (double) 
Skipping fft_fft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_fft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_fft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_ifft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_ifft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_ifft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_rfft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_rfft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_rfft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_irfft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_irfft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_irfft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_hfft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_hfft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_hfft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_ihfft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_ihfft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_ihfft Because of Arg: c10::optional<int64_t> (int64_t) 
Skipping fft_fftn Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping fft_fftn Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping fft_fftn Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping fft_ifftn Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping fft_ifftn Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping fft_ifftn Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping fft_rfftn Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping fft_rfftn Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping fft_rfftn Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping fft_irfftn Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping fft_irfftn Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping fft_irfftn Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping linalg_norm Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping linalg_norm Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping linalg_norm Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping linalg_norm Because of Arg: c10::optional<Scalar> (Scalar) 
Skipping linalg_norm Because of Arg: std::string (std::string) 
Skipping linalg_norm Because of Arg: std::string (std::string) 
Skipping linalg_norm Because of Arg: std::string (std::string) 
Skipping linalg_norm Because of Arg: std::string (std::string) 
Skipping _test_optional_intlist Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping _test_optional_filled_intlist Because of Arg: c10::optional<IntArrayRef> (IntArrayRef) 
Skipping _test_optional_floatlist Because of Arg: c10::optional<ArrayRef<double>> (ArrayRef<double>) 
[1231/3378] Generating ../../torch/csrc/autograd/generated/Functions.cpp, ../../t.../python_functions.h, ../../torch/testing/_internal/generated/annotated_fn_args.py
Writing torch/csrc/autograd/generated/python_functions.h
Writing torch/csrc/autograd/generated/python_functions.cpp
Writing torch/csrc/autograd/generated/python_variable_methods.cpp
Writing torch/csrc/autograd/generated/python_torch_functions.cpp
Writing torch/csrc/autograd/generated/python_nn_functions.cpp
Writing torch/csrc/autograd/generated/python_fft_functions.cpp
Writing torch/csrc/autograd/generated/python_linalg_functions.cpp
Writing torch/csrc/autograd/generated/VariableType.h
Writing torch/csrc/autograd/generated/VariableType_0.cpp
Writing torch/csrc/autograd/generated/TraceType_0.cpp
Writing torch/csrc/autograd/generated/VariableType_1.cpp
Writing torch/csrc/autograd/generated/TraceType_1.cpp
Writing torch/csrc/autograd/generated/VariableType_2.cpp
Writing torch/csrc/autograd/generated/TraceType_2.cpp
Writing torch/csrc/autograd/generated/VariableType_3.cpp
Writing torch/csrc/autograd/generated/TraceType_3.cpp
Writing torch/csrc/autograd/generated/VariableType_4.cpp
Writing torch/csrc/autograd/generated/TraceType_4.cpp
Writing torch/csrc/autograd/generated/VariableTypeEverything.cpp
Writing torch/csrc/autograd/generated/TraceTypeEverything.cpp
Writing torch/csrc/autograd/generated/RegistrationDeclarations.h
Writing torch/csrc/autograd/generated/Functions.h
Writing torch/csrc/autograd/generated/Functions.cpp
Writing torch/csrc/autograd/generated/variable_factories.h
Writing torch/csrc/jit/generated/generated_unboxing_wrappers_0.cpp
Writing torch/csrc/jit/generated/generated_unboxing_wrappers_1.cpp
Writing torch/csrc/jit/generated/generated_unboxing_wrappers_2.cpp
Writing torch/testing/_internal/generated/annotated_fn_args.py
[1509/3378] Building CXX object caffe2/CMakeFiles/torch_cpu.dir/__/aten/src/TH/THTensorLapack.cpp.o
[1618/3378] Building CXX object caffe2/CMakeFiles/torch_cpu.dir/utils/proto_utils.cc.o
../caffe2/utils/proto_utils.cc: In function 'bool caffe2::ParseProtoFromLargeString(const string&, google::protobuf::Message*)':
../caffe2/utils/proto_utils.cc:204:58: warning: 'void google::protobuf::io::CodedInputStream::SetTotalBytesLimit(int, int)' is deprecated: Please use the single parameter version of SetTotalBytesLimit(). The second parameter is ignored. [-Wdeprecated-declarations]
   coded_stream.SetTotalBytesLimit(2147483647, 512LL << 20);
                                                          ^
In file included from ../third_party/protobuf/src/google/protobuf/message_lite.h:47:0,
                 from ../third_party/protobuf/src/google/protobuf/generated_enum_util.h:36,
                 from ../third_party/protobuf/src/google/protobuf/generated_enum_reflection.h:44,
                 from ../third_party/protobuf/src/google/protobuf/generated_message_reflection.h:48,
                 from ../third_party/protobuf/src/google/protobuf/message.h:122,
                 from ../caffe2/utils/proto_utils.h:7,
                 from ../caffe2/utils/proto_utils.cc:1:
../third_party/protobuf/src/google/protobuf/io/coded_stream.h:397:8: note: declared here
   void SetTotalBytesLimit(int total_bytes_limit, int) {
        ^~~~~~~~~~~~~~~~~~
../caffe2/utils/proto_utils.cc: In function 'bool caffe2::ReadProtoFromBinaryFile(const char*, google::protobuf::MessageLite*)':
../caffe2/utils/proto_utils.cc:241:56: warning: 'void google::protobuf::io::CodedInputStream::SetTotalBytesLimit(int, int)' is deprecated: Please use the single parameter version of SetTotalBytesLimit(). The second parameter is ignored. [-Wdeprecated-declarations]
   coded_input->SetTotalBytesLimit(2147483647, 536870912);
                                                        ^
In file included from ../third_party/protobuf/src/google/protobuf/message_lite.h:47:0,
                 from ../third_party/protobuf/src/google/protobuf/generated_enum_util.h:36,
                 from ../third_party/protobuf/src/google/protobuf/generated_enum_reflection.h:44,
                 from ../third_party/protobuf/src/google/protobuf/generated_message_reflection.h:48,
                 from ../third_party/protobuf/src/google/protobuf/message.h:122,
                 from ../caffe2/utils/proto_utils.h:7,
                 from ../caffe2/utils/proto_utils.cc:1:
../third_party/protobuf/src/google/protobuf/io/coded_stream.h:397:8: note: declared here
   void SetTotalBytesLimit(int total_bytes_limit, int) {
        ^~~~~~~~~~~~~~~~~~
[2158/3378] Building CXX object caffe2/CMakeFiles/torch_cpu.dir/__/torch/csrc/utils/tensor_flatten.cpp.o
In file included from ../torch/csrc/utils/tensor_flatten.cpp:1:0:
../torch/csrc/utils/tensor_flatten.h: In member function 'at::DeprecatedTypeProperties& torch::utils::TensorGroup::type()':
../torch/csrc/utils/tensor_flatten.h:36:28: warning: 'at::DeprecatedTypeProperties& at::Tensor::type() const' is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]
     return tensors[0].type();
                            ^
In file included from ../aten/src/ATen/Tensor.h:3:0,
                 from ../aten/src/ATen/Context.h:4,
                 from ../aten/src/ATen/ATen.h:9,
                 from ../torch/csrc/utils/tensor_flatten.h:5,
                 from ../torch/csrc/utils/tensor_flatten.cpp:1:
aten/src/ATen/core/TensorBody.h:277:30: note: declared here
   DeprecatedTypeProperties & type() const {
                              ^~~~
../torch/csrc/utils/tensor_flatten.cpp: In function 'std::vector<torch::utils::TensorGroup> torch::utils::take_tensors(at::TensorList, size_t, bool)':
../torch/csrc/utils/tensor_flatten.cpp:31:43: warning: 'at::DeprecatedTypeProperties& at::Tensor::type() const' is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]
     auto& type_group = groups[tensor.type().id()];
                                           ^
In file included from ../aten/src/ATen/Tensor.h:3:0,
                 from ../aten/src/ATen/Context.h:4,
                 from ../aten/src/ATen/ATen.h:9,
                 from ../torch/csrc/utils/tensor_flatten.h:5,
                 from ../torch/csrc/utils/tensor_flatten.cpp:1:
aten/src/ATen/core/TensorBody.h:277:30: note: declared here
   DeprecatedTypeProperties & type() const {
                              ^~~~
../torch/csrc/utils/tensor_flatten.cpp: In function 'void torch::utils::reorder_tensors_like(std::vector<at::Tensor>&, at::TensorList)':
../torch/csrc/utils/tensor_flatten.cpp:69:35: warning: 'at::DeprecatedTypeProperties& at::Tensor::type() const' is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]
     type_indices[&tensors[i].type()].push_back(i);
                                   ^
In file included from ../aten/src/ATen/Tensor.h:3:0,
                 from ../aten/src/ATen/Context.h:4,
                 from ../aten/src/ATen/ATen.h:9,
                 from ../torch/csrc/utils/tensor_flatten.h:5,
                 from ../torch/csrc/utils/tensor_flatten.cpp:1:
aten/src/ATen/core/TensorBody.h:277:30: note: declared here
   DeprecatedTypeProperties & type() const {
                              ^~~~
../torch/csrc/utils/tensor_flatten.cpp:75:37: warning: 'at::DeprecatedTypeProperties& at::Tensor::type() const' is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]
     auto * type = &tmpl_tensor.type();
                                     ^
In file included from ../aten/src/ATen/Tensor.h:3:0,
                 from ../aten/src/ATen/Context.h:4,
                 from ../aten/src/ATen/ATen.h:9,
                 from ../torch/csrc/utils/tensor_flatten.h:5,
                 from ../torch/csrc/utils/tensor_flatten.cpp:1:
aten/src/ATen/core/TensorBody.h:277:30: note: declared here
   DeprecatedTypeProperties & type() const {
                              ^~~~
[2178/3378] Building CXX object caffe2/CMakeFiles/torch_cpu.dir/__/torch/csrc/jit/runtime/register_prim_ops.cpp.o
In file included from ../torch/csrc/jit/runtime/custom_operator.h:5:0,
                 from ../torch/csrc/jit/runtime/register_prim_ops.cpp:1:
../torch/csrc/jit/runtime/operator.h: In instantiation of 'c10::optional<torch::jit::Operator> torch::jit::OperatorGenerator(torch::detail::SelectiveStr<true>, Func&&, torch::jit::AliasAnalysisKind) [with Func = torch::jit::{anonymous}::<lambda(torch::jit::Stack&)>; torch::jit::AliasAnalysisKind = c10::AliasAnalysisKind]':
../torch/csrc/jit/runtime/register_prim_ops.cpp:100:35:   required from here
../torch/csrc/jit/runtime/operator.h:237:34: warning: 'torch::jit::Operator::Operator(std::__cxx11::string, std::function<int(std::vector<c10::IValue>&)>, c10::AliasAnalysisKind)' is deprecated: Please define your operator as taking a `Stack*` argument instead of `Stack&` and as returning `void` instead of `int`. [-Wdeprecated-declarations]
   return c10::optional<Operator>(Operator(
                                  ^~~~~~~~~
       std::string(schema_str), std::forward<Func>(op), alias_analysis));
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../torch/csrc/jit/runtime/operator.h:89:3: note: declared here
   Operator(
   ^~~~~~~~
../torch/csrc/jit/runtime/operator.h: In instantiation of 'c10::optional<torch::jit::Operator> torch::jit::OperatorGenerator(torch::detail::SelectiveStr<true>, Func&&, torch::jit::AliasAnalysisKind) [with Func = torch::jit::{anonymous}::<lambda(torch::jit::Stack&)>; torch::jit::AliasAnalysisKind = c10::AliasAnalysisKind]':
../torch/csrc/jit/runtime/register_prim_ops.cpp:203:35:   required from here
../torch/csrc/jit/runtime/operator.h:237:34: warning: 'torch::jit::Operator::Operator(std::__cxx11::string, std::function<int(std::vector<c10::IValue>&)>, c10::AliasAnalysisKind)' is deprecated: Please define your operator as taking a `Stack*` argument instead of `Stack&` and as returning `void` instead of `int`. [-Wdeprecated-declarations]
   return c10::optional<Operator>(Operator(
                                  ^~~~~~~~~
       std::string(schema_str), std::forward<Func>(op), alias_analysis));
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../torch/csrc/jit/runtime/operator.h:89:3: note: declared here
   Operator(
   ^~~~~~~~
../torch/csrc/jit/runtime/operator.h: In instantiation of 'c10::optional<torch::jit::Operator> torch::jit::OperatorGenerator(torch::detail::SelectiveStr<true>, Func&&, torch::jit::AliasAnalysisKind) [with Func = torch::jit::{anonymous}::<lambda(torch::jit::Stack&)>; torch::jit::AliasAnalysisKind = c10::AliasAnalysisKind]':
../torch/csrc/jit/runtime/register_prim_ops.cpp:213:35:   required from here
../torch/csrc/jit/runtime/operator.h:237:34: warning: 'torch::jit::Operator::Operator(std::__cxx11::string, std::function<int(std::vector<c10::IValue>&)>, c10::AliasAnalysisKind)' is deprecated: Please define your operator as taking a `Stack*` argument instead of `Stack&` and as returning `void` instead of `int`. [-Wdeprecated-declarations]
   return c10::optional<Operator>(Operator(
                                  ^~~~~~~~~
       std::string(schema_str), std::forward<Func>(op), alias_analysis));
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../torch/csrc/jit/runtime/operator.h:89:3: note: declared here
   Operator(
   ^~~~~~~~
../torch/csrc/jit/runtime/operator.h: In instantiation of 'c10::optional<torch::jit::Operator> torch::jit::OperatorGenerator(torch::detail::SelectiveStr<true>, Func&&, torch::jit::AliasAnalysisKind) [with Func = torch::jit::{anonymous}::<lambda(torch::jit::Stack&)>; torch::jit::AliasAnalysisKind = c10::AliasAnalysisKind]':
../torch/csrc/jit/runtime/register_prim_ops.cpp:803:35:   required from here
../torch/csrc/jit/runtime/operator.h:237:34: warning: 'torch::jit::Operator::Operator(std::__cxx11::string, std::function<int(std::vector<c10::IValue>&)>, c10::AliasAnalysisKind)' is deprecated: Please define your operator as taking a `Stack*` argument instead of `Stack&` and as returning `void` instead of `int`. [-Wdeprecated-declarations]
   return c10::optional<Operator>(Operator(
                                  ^~~~~~~~~
       std::string(schema_str), std::forward<Func>(op), alias_analysis));
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../torch/csrc/jit/runtime/operator.h:89:3: note: declared here
   Operator(
   ^~~~~~~~
../torch/csrc/jit/runtime/operator.h: In instantiation of 'c10::optional<torch::jit::Operator> torch::jit::OperatorGenerator(torch::detail::SelectiveStr<true>, Func&&, torch::jit::AliasAnalysisKind) [with Func = torch::jit::{anonymous}::<lambda(torch::jit::Stack&)>; torch::jit::AliasAnalysisKind = c10::AliasAnalysisKind]':
../torch/csrc/jit/runtime/register_prim_ops.cpp:815:35:   required from here
../torch/csrc/jit/runtime/operator.h:237:34: warning: 'torch::jit::Operator::Operator(std::__cxx11::string, std::function<int(std::vector<c10::IValue>&)>, c10::AliasAnalysisKind)' is deprecated: Please define your operator as taking a `Stack*` argument instead of `Stack&` and as returning `void` instead of `int`. [-Wdeprecated-declarations]
   return c10::optional<Operator>(Operator(
                                  ^~~~~~~~~
       std::string(schema_str), std::forward<Func>(op), alias_analysis));
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../torch/csrc/jit/runtime/operator.h:89:3: note: declared here
   Operator(
   ^~~~~~~~
../torch/csrc/jit/runtime/operator.h: In instantiation of 'c10::optional<torch::jit::Operator> torch::jit::OperatorGenerator(torch::detail::SelectiveStr<true>, Func&&, torch::jit::AliasAnalysisKind) [with Func = torch::jit::{anonymous}::<lambda(torch::jit::Stack&)>; torch::jit::AliasAnalysisKind = c10::AliasAnalysisKind]':
../torch/csrc/jit/runtime/register_prim_ops.cpp:828:35:   required from here
../torch/csrc/jit/runtime/operator.h:237:34: warning: 'torch::jit::Operator::Operator(std::__cxx11::string, std::function<int(std::vector<c10::IValue>&)>, c10::AliasAnalysisKind)' is deprecated: Please define your operator as taking a `Stack*` argument instead of `Stack&` and as returning `void` instead of `int`. [-Wdeprecated-declarations]
   return c10::optional<Operator>(Operator(
                                  ^~~~~~~~~
       std::string(schema_str), std::forward<Func>(op), alias_analysis));
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../torch/csrc/jit/runtime/operator.h:89:3: note: declared here
   Operator(
   ^~~~~~~~
../torch/csrc/jit/runtime/operator.h: In instantiation of 'c10::optional<torch::jit::Operator> torch::jit::OperatorGenerator(torch::detail::SelectiveStr<true>, Func&&, torch::jit::AliasAnalysisKind) [with Func = torch::jit::{anonymous}::<lambda(torch::jit::Stack&)>; torch::jit::AliasAnalysisKind = c10::AliasAnalysisKind]':
../torch/csrc/jit/runtime/register_prim_ops.cpp:840:35:   required from here
../torch/csrc/jit/runtime/operator.h:237:34: warning: 'torch::jit::Operator::Operator(std::__cxx11::string, std::function<int(std::vector<c10::IValue>&)>, c10::AliasAnalysisKind)' is deprecated: Please define your operator as taking a `Stack*` argument instead of `Stack&` and as returning `void` instead of `int`. [-Wdeprecated-declarations]
   return c10::optional<Operator>(Operator(
                                  ^~~~~~~~~
       std::string(schema_str), std::forward<Func>(op), alias_analysis));
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
../torch/csrc/jit/runtime/operator.h:89:3: note: declared here
   Operator(
   ^~~~~~~~
[2190/3378] Building CXX object caffe2/CMakeFiles/torch_cpu.dir/__/torch/csrc/jit/serialization/export.cpp.o
In file included from ../third_party/onnx/onnx/defs/shape_inference.h:4:0,
                 from ../third_party/onnx/onnx/defs/schema.h:24,
                 from ../third_party/onnx/onnx/checker.h:7,
                 from ../torch/csrc/jit/serialization/export.cpp:16:
../third_party/onnx/onnx/proto_utils.h: In instantiation of 'bool onnx_torch::ParseProtoFromBytes(Proto*, const char*, size_t) [with Proto = onnx_torch::ModelProto; size_t = long unsigned int]':
../torch/csrc/jit/serialization/export.cpp:919:77:   required from here
../third_party/onnx/onnx/proto_utils.h:34:34: warning: 'void google::protobuf::io::CodedInputStream::SetTotalBytesLimit(int, int)' is deprecated: Please use the single parameter version of SetTotalBytesLimit(). The second parameter is ignored. [-Wdeprecated-declarations]
   coded_stream.SetTotalBytesLimit((2048LL << 20) - 1, 512LL << 20);
   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from third_party/onnx/onnx/onnx_onnx_torch-ml.pb.h:23:0,
                 from third_party/onnx/onnx/onnx-ml.pb.h:2,
                 from ../third_party/onnx/onnx/onnx_pb.h:50,
                 from ../torch/csrc/jit/serialization/onnx.h:3,
                 from ../torch/csrc/jit/serialization/export.cpp:7:
../third_party/protobuf/src/google/protobuf/io/coded_stream.h:397:8: note: declared here
   void SetTotalBytesLimit(int total_bytes_limit, int) {
        ^~~~~~~~~~~~~~~~~~
[2344/3378] Building NVCC (Device) object caffe2/CMakeFiles/torch_cuda.dir/__/aten/src/ATen/native/cuda/torch_cuda_generated_DistributionRandomKernel.cu.o
/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=double, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint64_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(60): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

/pytorch/aten/src/ATen/core/TransformationHelper.h(64): warning: floating-point value does not fit in required integral type
          detected during:
            instantiation of "T at::transformation::uniform_int<T,V>(V) [with T=float, V=uint32_t]" 
/pytorch/aten/src/ATen/native/cuda/DistributionTemplates.h(352): here
            instantiation of "void at::native::templates::cuda::random_kernel(at::TensorIterator &, RNG) [with RNG=at::CUDAGeneratorImpl *]" 
/pytorch/aten/src/ATen/native/cuda/DistributionRandomKernel.cu(44): here

[2390/3378] Building NVCC (Device) object caffe2/CMakeFiles/torch_cuda.dir/__/aten/src/ATen/native/cuda/torch_cuda_generated_CompareNEKernel.cu.o
[2427/3378] Building NVCC (Device) object caffe2/CMakeFiles/torch_cuda.dir/__/aten/src/ATen/native/cuda/torch_cuda_generated_FractionalMaxPool2d.cu.o
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu: In lambda function:
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:198:121: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
     "fractional_max_pool2d_out_cuda_frame",
                                                                                                                         ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:199:54: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
     [&] {
                                                      ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:199:115: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = long int; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
     [&] {
                                                                                                                   ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:200:55: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 3ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
       auto devInput = input_.packed_accessor<scalar_t, 4>();
                                                       ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu: In lambda function:
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:203:13: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
       auto devSamples = randomSamples.packed_accessor<scalar_t, 3>();
             ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:203:73: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
       auto devSamples = randomSamples.packed_accessor<scalar_t, 3>();
                                                                         ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:204:6: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = long int; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
       fractional_max_pool2d_out_cuda_frame<scalar_t>
      ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:204:73: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 3ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
       fractional_max_pool2d_out_cuda_frame<scalar_t>
                                                                         ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu: In lambda function:
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:207:37: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = c10::Half; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
           poolSizeH, poolSizeW);
                                     ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:207:101: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = c10::Half; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
           poolSizeH, poolSizeW);
                                                                                                     ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:208:34: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = long int; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
        }
                                  ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:208:105: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = c10::Half; long unsigned int N = 3ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
        }
                                                                                                         ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu: In function 'void at::native::_GLOBAL__N__66_tmpxft_00011ed4_00000000_12_FractionalMaxPool2d_compute_75_cpp1_ii_aedcad55::fractional_max_pool2d_backward_out_cuda_template(at::Tensor&, const at::Tensor&, const at::Tensor&, c10::IntArrayRef, c10::IntArrayRef, const at::Tensor&)':
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:266:56: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = long int; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto devIndices = indices.packed_accessor<int64_t, 4>();
                                                        ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu: In lambda function:
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:269:6: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
     [&] {
      ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:269:75: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
     [&] {
                                                                           ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu: In lambda function:
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:272:24: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
       fractional_max_pool2d_backward_out_cuda_frame<scalar_t>
                        ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:272:92: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
       fractional_max_pool2d_backward_out_cuda_frame<scalar_t>
                                                                                            ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu: In lambda function:
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:275:47: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = c10::Half; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
       }
                                               ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/cuda/FractionalMaxPool2d.cu:275:119: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = c10::Half; long unsigned int N = 4ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
       }
                                                                                                                       ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
[2441/3378] Building NVCC (Device) object caffe2/CMakeFiles/torch_cuda.dir/__/aten/src/ATen/native/cuda/torch_cuda_generated_Indexing.cu.o
/pytorch/aten/src/ATen/native/cuda/Indexing.cu: In function 'std::tuple<at::Tensor, long int, long int, long int> at::native::computeLinearIndex(const at::Tensor&, at::TensorList, bool)':
/pytorch/aten/src/ATen/native/cuda/Indexing.cu:129:32: warning: 'at::DeprecatedTypeProperties& at::Tensor::type() const' is deprecated: Tensor.type() is deprecated. Instead use Tensor.options(), which in many cases (e.g. in a constructor) is a drop-in replacement. If you were using data from type(), that is now available from Tensor itself, so instead of tensor.type().scalar_type(), use tensor.scalar_type() instead and instead of tensor.type().backend() use tensor.device(). [-Wdeprecated-declarations]
   const auto& backend = src.type().backend();
                                ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:277:1: note: declared here
   DeprecatedTypeProperties & type() const {
 ^ ~~
[2486/3378] Building NVCC (Device) object caffe2/CMakeFiles/torch_cuda.dir/__/aten/src/ATen/native/sparse/cuda/torch_cuda_generated_SoftMax.cu.o
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu: In function 'at::Tensor at::native::_GLOBAL__N__54_tmpxft_000150ca_00000000_12_SoftMax_compute_75_cpp1_ii_75209b9c::get_offsets(const at::Tensor&, const IntArrayRef&, int64_t)':
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:240:62: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = long int; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto indices_accessor = indices.packed_accessor<int64_t, 2>();
                                                              ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu: In instantiation of 'void at::native::_GLOBAL__N__54_tmpxft_000150ca_00000000_12_SoftMax_compute_75_cpp1_ii_75209b9c::cuda_sparse_coo_softmax(at::Tensor&, const at::Tensor&, int64_t) [with scalar_t = double; bool LogSoftMax = false; int64_t = long int]':
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:580:124:   required from here
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:403:75: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto values_accessor = values_2.packed_accessor<scalar_t, 2>();
                                                                           ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:406:83: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto out_values_accessor = out_values_2.packed_accessor<scalar_t, 2>();
                                                                                   ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu: In instantiation of 'void at::native::_GLOBAL__N__54_tmpxft_000150ca_00000000_12_SoftMax_compute_75_cpp1_ii_75209b9c::cuda_sparse_coo_softmax(at::Tensor&, const at::Tensor&, int64_t) [with scalar_t = float; bool LogSoftMax = false; int64_t = long int]':
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:582:6:   required from here
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:403:75: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto values_accessor = values_2.packed_accessor<scalar_t, 2>();
                                                                           ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:406:83: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto out_values_accessor = out_values_2.packed_accessor<scalar_t, 2>();
                                                                                   ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu: In instantiation of 'void at::native::_GLOBAL__N__54_tmpxft_000150ca_00000000_12_SoftMax_compute_75_cpp1_ii_75209b9c::cuda_sparse_coo_softmax(at::Tensor&, const at::Tensor&, int64_t) [with scalar_t = double; bool LogSoftMax = true; int64_t = long int]':
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:596:123:   required from here
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:403:75: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto values_accessor = values_2.packed_accessor<scalar_t, 2>();
                                                                           ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:406:83: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto out_values_accessor = out_values_2.packed_accessor<scalar_t, 2>();
                                                                                   ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu: In instantiation of 'void at::native::_GLOBAL__N__54_tmpxft_000150ca_00000000_12_SoftMax_compute_75_cpp1_ii_75209b9c::cuda_sparse_coo_softmax(at::Tensor&, const at::Tensor&, int64_t) [with scalar_t = float; bool LogSoftMax = true; int64_t = long int]':
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:598:4:   required from here
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:403:75: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto values_accessor = values_2.packed_accessor<scalar_t, 2>();
                                                                           ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:406:83: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto out_values_accessor = out_values_2.packed_accessor<scalar_t, 2>();
                                                                                   ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu: In instantiation of 'void at::native::_GLOBAL__N__54_tmpxft_000150ca_00000000_12_SoftMax_compute_75_cpp1_ii_75209b9c::cuda_sparse_coo_softmax_backward(at::Tensor&, const at::Tensor&, const at::Tensor&, int64_t) [with scalar_t = double; bool LogSoftMax = false; int64_t = long int]':
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:615:16:   required from here
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:516:75: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto values_accessor = values_2.packed_accessor<scalar_t, 2>();
                                                                           ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:519:83: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto out_values_accessor = out_values_2.packed_accessor<scalar_t, 2>();
                                                                                   ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:522:85: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto grad_values_accessor = grad_values_2.packed_accessor<scalar_t, 2>();
                                                                                     ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu: In instantiation of 'void at::native::_GLOBAL__N__54_tmpxft_000150ca_00000000_12_SoftMax_compute_75_cpp1_ii_75209b9c::cuda_sparse_coo_softmax_backward(at::Tensor&, const at::Tensor&, const at::Tensor&, int64_t) [with scalar_t = float; bool LogSoftMax = false; int64_t = long int]':
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:616:47:   required from here
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:516:75: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto values_accessor = values_2.packed_accessor<scalar_t, 2>();
                                                                           ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:519:83: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto out_values_accessor = out_values_2.packed_accessor<scalar_t, 2>();
                                                                                   ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:522:85: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto grad_values_accessor = grad_values_2.packed_accessor<scalar_t, 2>();
                                                                                     ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu: In instantiation of 'void at::native::_GLOBAL__N__54_tmpxft_000150ca_00000000_12_SoftMax_compute_75_cpp1_ii_75209b9c::cuda_sparse_coo_softmax_backward(at::Tensor&, const at::Tensor&, const at::Tensor&, int64_t) [with scalar_t = double; bool LogSoftMax = true; int64_t = long int]':
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:635:15:   required from here
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:516:75: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto values_accessor = values_2.packed_accessor<scalar_t, 2>();
                                                                           ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:519:83: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto out_values_accessor = out_values_2.packed_accessor<scalar_t, 2>();
                                                                                   ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:522:85: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto grad_values_accessor = grad_values_2.packed_accessor<scalar_t, 2>();
                                                                                     ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu: In instantiation of 'void at::native::_GLOBAL__N__54_tmpxft_000150ca_00000000_12_SoftMax_compute_75_cpp1_ii_75209b9c::cuda_sparse_coo_softmax_backward(at::Tensor&, const at::Tensor&, const at::Tensor&, int64_t) [with scalar_t = float; bool LogSoftMax = true; int64_t = long int]':
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:636:45:   required from here
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:516:75: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto values_accessor = values_2.packed_accessor<scalar_t, 2>();
                                                                           ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:519:83: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto out_values_accessor = out_values_2.packed_accessor<scalar_t, 2>();
                                                                                   ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:522:85: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
   auto grad_values_accessor = grad_values_2.packed_accessor<scalar_t, 2>();
                                                                                     ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu: In instantiation of 'std::tuple<at::Tensor, at::Tensor, at::Tensor, at::Tensor> at::native::_GLOBAL__N__54_tmpxft_000150ca_00000000_12_SoftMax_compute_75_cpp1_ii_75209b9c::compute_pool_max(const at::Tensor&, const at::Tensor&, const IntArrayRef&, int64_t, int64_t) [with scalar_t = double; bool requireMxRows = true; c10::IntArrayRef = c10::ArrayRef<long int>; int64_t = long int]':
/tmp/tmpxft_000150ca_00000000-5_SoftMax.compute_75.cudafe1.stub.c:16:543:   required from here
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:326:73: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
     auto values_accessor =
                                                                         ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu: In instantiation of 'std::tuple<at::Tensor, at::Tensor, at::Tensor, at::Tensor> at::native::_GLOBAL__N__54_tmpxft_000150ca_00000000_12_SoftMax_compute_75_cpp1_ii_75209b9c::compute_pool_max(const at::Tensor&, const at::Tensor&, const IntArrayRef&, int64_t, int64_t) [with scalar_t = float; bool requireMxRows = true; c10::IntArrayRef = c10::ArrayRef<long int>; int64_t = long int]':
/tmp/tmpxft_000150ca_00000000-5_SoftMax.compute_75.cudafe1.stub.c:19:542:   required from here
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:326:73: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
     auto values_accessor =
                                                                         ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu: In instantiation of 'std::tuple<at::Tensor, at::Tensor, at::Tensor, at::Tensor> at::native::_GLOBAL__N__54_tmpxft_000150ca_00000000_12_SoftMax_compute_75_cpp1_ii_75209b9c::compute_pool_max(const at::Tensor&, const at::Tensor&, const IntArrayRef&, int64_t, int64_t) [with scalar_t = double; bool requireMxRows = false; c10::IntArrayRef = c10::ArrayRef<long int>; int64_t = long int]':
/tmp/tmpxft_000150ca_00000000-5_SoftMax.compute_75.cudafe1.stub.c:21:543:   required from here
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:326:73: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = double; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
     auto values_accessor =
                                                                         ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu: In instantiation of 'std::tuple<at::Tensor, at::Tensor, at::Tensor, at::Tensor> at::native::_GLOBAL__N__54_tmpxft_000150ca_00000000_12_SoftMax_compute_75_cpp1_ii_75209b9c::compute_pool_max(const at::Tensor&, const at::Tensor&, const IntArrayRef&, int64_t, int64_t) [with scalar_t = float; bool requireMxRows = false; c10::IntArrayRef = c10::ArrayRef<long int>; int64_t = long int]':
/tmp/tmpxft_000150ca_00000000-5_SoftMax.compute_75.cudafe1.stub.c:22:542:   required from here
/pytorch/aten/src/ATen/native/sparse/cuda/SoftMax.cu:326:73: warning: 'at::GenericPackedTensorAccessor<T, N, PtrTraits, index_t> at::Tensor::packed_accessor() const & [with T = float; long unsigned int N = 2ul; PtrTraits = at::DefaultPtrTraits; index_t = long int]' is deprecated: packed_accessor is deprecated, use packed_accessor32 or packed_accessor64 instead [-Wdeprecated-declarations]
     auto values_accessor =
                                                                         ^
/pytorch/build/aten/src/ATen/core/TensorBody.h:414:1: note: declared here
   GenericPackedTensorAccessor<T,N,PtrTraits,index_t> packed_accessor() const & {
 ^ ~~~~~~~~~~~~~
[2545/3378] Building NVCC (Device) object caffe2/CMakeFiles/torch_cuda.dir/operators/torch_cuda_generated_lengths_tile_op.cu.o
[2715/3378] Building CXX object caffe2/CMakeFiles/vec256_test_all_types_DEFAULT.dir/__/aten/src/ATen/test/vec256_test_all_types.cpp.o
FAILED: caffe2/CMakeFiles/vec256_test_all_types_DEFAULT.dir/__/aten/src/ATen/test/vec256_test_all_types.cpp.o 
/usr/bin/c++ -DCPU_CAPABILITY=DEFAULT -DCPU_CAPABILITY_DEFAULT -DHAVE_MALLOC_USABLE_SIZE=1 -DHAVE_MMAP=1 -DHAVE_SHM_OPEN=1 -DHAVE_SHM_UNLINK=1 -DMINIZ_DISABLE_ZIP_READER_CRC32_CHECKS -DONNXIFI_ENABLE_EXT=1 -DONNX_ML=1 -DONNX_NAMESPACE=onnx_torch -DUSE_EXTERNAL_MZCRC -D_FILE_OFFSET_BITS=64 -Iaten/src -I../aten/src -I. -I../ -I../cmake/../third_party/benchmark/include -Icaffe2/contrib/aten -I../third_party/onnx -Ithird_party/onnx -I../third_party/foxi -Ithird_party/foxi -Iinclude -Icaffe2/../aten/src -Icaffe2/../aten/src/ATen -I../torch/csrc/api -I../torch/csrc/api/include -I../c10/.. -I../c10/cuda/../.. -isystem third_party/gloo -isystem ../cmake/../third_party/gloo -isystem ../cmake/../third_party/googletest/googlemock/include -isystem ../cmake/../third_party/googletest/googletest/include -isystem ../third_party/protobuf/src -isystem ../cmake/../third_party/eigen -isystem /usr/local/include/python3.9 -isystem /usr/local/lib/python3.9/site-packages/numpy/core/include -isystem ../cmake/../third_party/pybind11/include -isystem ../cmake/../third_party/cub -isystem /usr/local/cuda/include -isystem ../third_party/googletest/googletest/include -isystem ../third_party/googletest/googletest -Wno-deprecated -fvisibility-inlines-hidden -fopenmp -DNDEBUG -DUSE_VULKAN_WRAPPER -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-sign-compare -Wno-unused-parameter -Wno-unused-variable -Wno-unused-function -Wno-unused-result -Wno-unused-local-typedefs -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -O3 -DNDEBUG -DNDEBUG -fPIE -DCAFFE2_USE_GLOO -DCUDA_HAS_FP16=1 -DUSE_GCC_GET_CPUID -DTH_HAVE_THREAD -O3 -Wno-ignored-qualifiers -pthread -std=gnu++1y -MD -MT caffe2/CMakeFiles/vec256_test_all_types_DEFAULT.dir/__/aten/src/ATen/test/vec256_test_all_types.cpp.o -MF caffe2/CMakeFiles/vec256_test_all_types_DEFAULT.dir/__/aten/src/ATen/test/vec256_test_all_types.cpp.o.d -o caffe2/CMakeFiles/vec256_test_all_types_DEFAULT.dir/__/aten/src/ATen/test/vec256_test_all_types.cpp.o -c ../aten/src/ATen/test/vec256_test_all_types.cpp
In file included from ../aten/src/ATen/test/vec256_test_all_types.cpp:1:0:
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:41&& ...)> [with auto:41 = {short int, short int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13:   required by substitution of 'template<class ... auto:41> {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:41&& ...)>::operator decltype ((({anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:41&& ...)>)0u).operator()(static_cast<auto:41&>(<unnamed>::Arithmetics_Division_Test<at::vec256::<unnamed>::Vec256<short int> >::TestBody::__lambda105<at::vec256::<unnamed>::Vec256<short int> >::_FUN::<unnamed>) ...)) (*)(auto:41&& ...)() const [with auto:41 = {short int, short int}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:41&& ...)>; T = short int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<short int>; Op1 = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:40&& ...)>; Op2 = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:41&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = short int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:544:25:   required from 'void {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_div_ub(short int, short int)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_div_ub));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:488:1: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_div_ub(T&, T&)
 filter_div_ub(T& val1, T& val2) {
 ^~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:488:1: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:512:1: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_div_ub(T&, T&) [with T = short int; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 filter_div_ub(T& val1, T& val2) {
 ^~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:512:1: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'short int&' from an rvalue of type 'short int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_div_ub));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:39&& ...)> [with auto:39 = {short int, short int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13:   required by substitution of 'template<class ... auto:39> {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:39&& ...)>::operator decltype ((({anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:39&& ...)>)0u).operator()(static_cast<auto:39&>(<unnamed>::Arithmetics_Multiplication_Test<at::vec256::<unnamed>::Vec256<short int> >::TestBody::__lambda102<at::vec256::<unnamed>::Vec256<short int> >::_FUN::<unnamed>) ...)) (*)(auto:39&& ...)() const [with auto:39 = {short int, short int}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:39&& ...)>; T = short int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<short int>; Op1 = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:38&& ...)>; Op2 = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:39&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = short int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:534:25:   required from 'void {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_mult_overflow(short int, short int)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_mult_overflow));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:482:1: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_mult_overflow(T&, T&)
 filter_mult_overflow(T& val1, T& val2) {
 ^~~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:482:1: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:499:1: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_mult_overflow(T&, T&) [with T = short int; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 filter_mult_overflow(T& val1, T& val2) {
 ^~~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:499:1: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'short int&' from an rvalue of type 'short int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_mult_overflow));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:37&& ...)> [with auto:37 = {short int, short int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17:   required by substitution of 'template<class ... auto:37> {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:37&& ...)>::operator decltype ((({anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:37&& ...)>)0u).operator()(static_cast<auto:37&>(<unnamed>::Arithmetics_Minus_Test<at::vec256::<unnamed>::Vec256<short int> >::TestBody::__lambda99<at::vec256::<unnamed>::Vec256<short int> >::_FUN::<unnamed>) ...)) (*)(auto:37&& ...)() const [with auto:37 = {short int, short int}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:37&& ...)>; T = short int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<short int>; Op1 = std::minus<short int>; Op2 = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:37&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = short int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:523:25:   required from 'void {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_sub_overflow(short int, short int)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_sub_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:437:46: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_sub_overflow(T&, T&)
 std::enable_if_t<is_complex<T>::value, void> filter_sub_overflow(T& a, T& b)
                                              ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:437:46: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:462:49: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_sub_overflow(T&, T&) [with T = short int; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 std::enable_if_t < !is_complex<T>::value, void> filter_sub_overflow(T& a, T& b) {
                                                 ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:462:49: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'short int&' from an rvalue of type 'short int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_sub_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:36&& ...)> [with auto:36 = {short int, short int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17:   required by substitution of 'template<class ... auto:36> {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:36&& ...)>::operator decltype ((({anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:36&& ...)>)0u).operator()(static_cast<auto:36&>(<unnamed>::Arithmetics_Plus_Test<at::vec256::<unnamed>::Vec256<short int> >::TestBody::__lambda97<at::vec256::<unnamed>::Vec256<short int> >::_FUN::<unnamed>) ...)) (*)(auto:36&& ...)() const [with auto:36 = {short int, short int}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:36&& ...)>; T = short int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<short int>; Op1 = std::plus<short int>; Op2 = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:36&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = short int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:511:25:   required from 'void {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_add_overflow(short int, short int)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_add_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:431:46: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_add_overflow(T&, T&)
 std::enable_if_t<is_complex<T>::value, void> filter_add_overflow(T& a, T& b)
                                              ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:431:46: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:443:49: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_add_overflow(T&, T&) [with T = short int; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 std::enable_if_t < !is_complex<T>::value, void> filter_add_overflow(T& a, T& b) {
                                                 ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:443:49: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'short int&' from an rvalue of type 'short int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_add_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:4&& ...)> [with auto:4 = {short int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:148:13:   required by substitution of 'template<class ... auto:4> {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:4&& ...)>::operator decltype ((({anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:4&& ...)>)0u).operator()(static_cast<auto:4&>(<unnamed>::SignManipulation_Negate_Test<at::vec256::<unnamed>::Vec256<short int> >::TestBody::__lambda34<at::vec256::<unnamed>::Vec256<short int> >::_FUN::<unnamed>) ...)) (*)(auto:4&& ...)() const [with auto:4 = {short int}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:4&& ...)>; T = short int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<short int>; Op1 = std::negate<short int>; Op2 = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(vec)>; Filter = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:4&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = short int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:144:24:   required from 'void {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'short int&' from an rvalue of type 'short int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:148:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_int_minimum));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:423:6: note:   initializing argument 1 of 'void filter_int_minimum(T&) [with T = short int]'
 void filter_int_minimum(T& val) {
      ^~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:3&& ...)> [with auto:3 = {short int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:139:13:   required by substitution of 'template<class ... auto:3> {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:3&& ...)>::operator decltype ((({anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:3&& ...)>)0u).operator()(static_cast<auto:3&>(<unnamed>::SignManipulation_Absolute_Test<at::vec256::<unnamed>::Vec256<short int> >::TestBody::__lambda32<at::vec256::<unnamed>::Vec256<short int> >::_FUN::<unnamed>) ...)) (*)(auto:3&& ...)() const [with auto:3 = {short int}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:3&& ...)>; T = short int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<short int>; Op1 = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:2&& ...)>; Op2 = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(vec)>; Filter = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:3&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = short int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:135:24:   required from 'void {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'short int&' from an rvalue of type 'short int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:139:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_int_minimum));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:423:6: note:   initializing argument 1 of 'void filter_int_minimum(T&) [with T = short int]'
 void filter_int_minimum(T& val) {
      ^~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:41&& ...)> [with auto:41 = {int, int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13:   required by substitution of 'template<class ... auto:41> {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:41&& ...)>::operator decltype ((({anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:41&& ...)>)0u).operator()(static_cast<auto:41&>(<unnamed>::Arithmetics_Division_Test<at::vec256::<unnamed>::Vec256<int> >::TestBody::__lambda105<at::vec256::<unnamed>::Vec256<int> >::_FUN::<unnamed>) ...)) (*)(auto:41&& ...)() const [with auto:41 = {int, int}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:41&& ...)>; T = int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<int>; Op1 = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:40&& ...)>; Op2 = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:41&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:544:25:   required from 'void {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_div_ub(int, int)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_div_ub));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:488:1: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_div_ub(T&, T&)
 filter_div_ub(T& val1, T& val2) {
 ^~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:488:1: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:512:1: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_div_ub(T&, T&) [with T = int; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 filter_div_ub(T& val1, T& val2) {
 ^~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:512:1: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'int&' from an rvalue of type 'int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_div_ub));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:39&& ...)> [with auto:39 = {int, int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13:   required by substitution of 'template<class ... auto:39> {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:39&& ...)>::operator decltype ((({anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:39&& ...)>)0u).operator()(static_cast<auto:39&>(<unnamed>::Arithmetics_Multiplication_Test<at::vec256::<unnamed>::Vec256<int> >::TestBody::__lambda102<at::vec256::<unnamed>::Vec256<int> >::_FUN::<unnamed>) ...)) (*)(auto:39&& ...)() const [with auto:39 = {int, int}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:39&& ...)>; T = int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<int>; Op1 = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:38&& ...)>; Op2 = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:39&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:534:25:   required from 'void {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_mult_overflow(int, int)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_mult_overflow));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:482:1: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_mult_overflow(T&, T&)
 filter_mult_overflow(T& val1, T& val2) {
 ^~~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:482:1: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:499:1: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_mult_overflow(T&, T&) [with T = int; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 filter_mult_overflow(T& val1, T& val2) {
 ^~~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:499:1: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'int&' from an rvalue of type 'int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_mult_overflow));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:37&& ...)> [with auto:37 = {int, int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17:   required by substitution of 'template<class ... auto:37> {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:37&& ...)>::operator decltype ((({anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:37&& ...)>)0u).operator()(static_cast<auto:37&>(<unnamed>::Arithmetics_Minus_Test<at::vec256::<unnamed>::Vec256<int> >::TestBody::__lambda99<at::vec256::<unnamed>::Vec256<int> >::_FUN::<unnamed>) ...)) (*)(auto:37&& ...)() const [with auto:37 = {int, int}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:37&& ...)>; T = int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<int>; Op1 = std::minus<int>; Op2 = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:37&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:523:25:   required from 'void {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_sub_overflow(int, int)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_sub_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:437:46: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_sub_overflow(T&, T&)
 std::enable_if_t<is_complex<T>::value, void> filter_sub_overflow(T& a, T& b)
                                              ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:437:46: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:462:49: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_sub_overflow(T&, T&) [with T = int; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 std::enable_if_t < !is_complex<T>::value, void> filter_sub_overflow(T& a, T& b) {
                                                 ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:462:49: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'int&' from an rvalue of type 'int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_sub_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:36&& ...)> [with auto:36 = {int, int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17:   required by substitution of 'template<class ... auto:36> {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:36&& ...)>::operator decltype ((({anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:36&& ...)>)0u).operator()(static_cast<auto:36&>(<unnamed>::Arithmetics_Plus_Test<at::vec256::<unnamed>::Vec256<int> >::TestBody::__lambda97<at::vec256::<unnamed>::Vec256<int> >::_FUN::<unnamed>) ...)) (*)(auto:36&& ...)() const [with auto:36 = {int, int}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:36&& ...)>; T = int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<int>; Op1 = std::plus<int>; Op2 = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:36&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:511:25:   required from 'void {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_add_overflow(int, int)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_add_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:431:46: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_add_overflow(T&, T&)
 std::enable_if_t<is_complex<T>::value, void> filter_add_overflow(T& a, T& b)
                                              ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:431:46: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:443:49: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_add_overflow(T&, T&) [with T = int; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 std::enable_if_t < !is_complex<T>::value, void> filter_add_overflow(T& a, T& b) {
                                                 ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:443:49: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'int&' from an rvalue of type 'int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_add_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:4&& ...)> [with auto:4 = {int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:148:13:   required by substitution of 'template<class ... auto:4> {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:4&& ...)>::operator decltype ((({anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:4&& ...)>)0u).operator()(static_cast<auto:4&>(<unnamed>::SignManipulation_Negate_Test<at::vec256::<unnamed>::Vec256<int> >::TestBody::__lambda34<at::vec256::<unnamed>::Vec256<int> >::_FUN::<unnamed>) ...)) (*)(auto:4&& ...)() const [with auto:4 = {int}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:4&& ...)>; T = int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<int>; Op1 = std::negate<int>; Op2 = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(vec)>; Filter = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:4&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:144:24:   required from 'void {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'int&' from an rvalue of type 'int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:148:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_int_minimum));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:423:6: note:   initializing argument 1 of 'void filter_int_minimum(T&) [with T = int]'
 void filter_int_minimum(T& val) {
      ^~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:3&& ...)> [with auto:3 = {int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:139:13:   required by substitution of 'template<class ... auto:3> {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:3&& ...)>::operator decltype ((({anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:3&& ...)>)0u).operator()(static_cast<auto:3&>(<unnamed>::SignManipulation_Absolute_Test<at::vec256::<unnamed>::Vec256<int> >::TestBody::__lambda32<at::vec256::<unnamed>::Vec256<int> >::_FUN::<unnamed>) ...)) (*)(auto:3&& ...)() const [with auto:3 = {int}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:3&& ...)>; T = int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<int>; Op1 = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:2&& ...)>; Op2 = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(vec)>; Filter = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:3&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:135:24:   required from 'void {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'int&' from an rvalue of type 'int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:139:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_int_minimum));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:423:6: note:   initializing argument 1 of 'void filter_int_minimum(T&) [with T = int]'
 void filter_int_minimum(T& val) {
      ^~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:45&& ...)> [with auto:45 = {short int, short int, short int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:682:17:   required by substitution of 'template<class ... auto:45> {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:45&& ...)>::operator decltype ((({anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:45&& ...)>)0u).operator()(static_cast<auto:45&>(<unnamed>::MinMax_Clamp_Test<at::vec256::<unnamed>::Vec256<short int> >::TestBody::__lambda129<at::vec256::<unnamed>::Vec256<short int> >::_FUN::<unnamed>) ...)) (*)(auto:45&& ...)() const [with auto:45 = {short int, short int, short int}]'
../aten/src/ATen/test/vec256_test_all_types.h:196:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&, T&) [with Filter = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:45&& ...)>; T = short int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:1047:28:   required from 'void test_ternary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<short int>; Op1 = short int (*)(const short int&, const short int&, const short int&); Op2 = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(const vec&, const vec&, const vec&)>; Filter = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]::<lambda(auto:45&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = short int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:676:26:   required from 'void {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<short int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'short int&' from an rvalue of type 'short int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:682:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_clamp));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:402:6: note:   initializing argument 1 of 'void filter_clamp(T&, T&, T&) [with T = short int]'
 void filter_clamp(T& f, T& s, T& t) {
      ^~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:41&& ...)> [with auto:41 = {long int, long int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13:   required by substitution of 'template<class ... auto:41> {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:41&& ...)>::operator decltype ((({anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:41&& ...)>)0u).operator()(static_cast<auto:41&>(<unnamed>::Arithmetics_Division_Test<at::vec256::<unnamed>::Vec256<long int> >::TestBody::__lambda105<at::vec256::<unnamed>::Vec256<long int> >::_FUN::<unnamed>) ...)) (*)(auto:41&& ...)() const [with auto:41 = {long int, long int}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:41&& ...)>; T = long int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<long int>; Op1 = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:40&& ...)>; Op2 = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:41&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = long int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:544:25:   required from 'void {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_div_ub(long int, long int)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_div_ub));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:488:1: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_div_ub(T&, T&)
 filter_div_ub(T& val1, T& val2) {
 ^~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:488:1: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:512:1: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_div_ub(T&, T&) [with T = long int; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 filter_div_ub(T& val1, T& val2) {
 ^~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:512:1: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'long int&' from an rvalue of type 'long int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_div_ub));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:39&& ...)> [with auto:39 = {long int, long int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13:   required by substitution of 'template<class ... auto:39> {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:39&& ...)>::operator decltype ((({anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:39&& ...)>)0u).operator()(static_cast<auto:39&>(<unnamed>::Arithmetics_Multiplication_Test<at::vec256::<unnamed>::Vec256<long int> >::TestBody::__lambda102<at::vec256::<unnamed>::Vec256<long int> >::_FUN::<unnamed>) ...)) (*)(auto:39&& ...)() const [with auto:39 = {long int, long int}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:39&& ...)>; T = long int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<long int>; Op1 = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:38&& ...)>; Op2 = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:39&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = long int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:534:25:   required from 'void {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_mult_overflow(long int, long int)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_mult_overflow));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:482:1: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_mult_overflow(T&, T&)
 filter_mult_overflow(T& val1, T& val2) {
 ^~~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:482:1: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:499:1: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_mult_overflow(T&, T&) [with T = long int; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 filter_mult_overflow(T& val1, T& val2) {
 ^~~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:499:1: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'long int&' from an rvalue of type 'long int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_mult_overflow));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:37&& ...)> [with auto:37 = {long int, long int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17:   required by substitution of 'template<class ... auto:37> {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:37&& ...)>::operator decltype ((({anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:37&& ...)>)0u).operator()(static_cast<auto:37&>(<unnamed>::Arithmetics_Minus_Test<at::vec256::<unnamed>::Vec256<long int> >::TestBody::__lambda99<at::vec256::<unnamed>::Vec256<long int> >::_FUN::<unnamed>) ...)) (*)(auto:37&& ...)() const [with auto:37 = {long int, long int}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:37&& ...)>; T = long int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<long int>; Op1 = std::minus<long int>; Op2 = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:37&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = long int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:523:25:   required from 'void {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_sub_overflow(long int, long int)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_sub_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:437:46: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_sub_overflow(T&, T&)
 std::enable_if_t<is_complex<T>::value, void> filter_sub_overflow(T& a, T& b)
                                              ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:437:46: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:462:49: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_sub_overflow(T&, T&) [with T = long int; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 std::enable_if_t < !is_complex<T>::value, void> filter_sub_overflow(T& a, T& b) {
                                                 ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:462:49: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'long int&' from an rvalue of type 'long int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_sub_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:36&& ...)> [with auto:36 = {long int, long int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17:   required by substitution of 'template<class ... auto:36> {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:36&& ...)>::operator decltype ((({anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:36&& ...)>)0u).operator()(static_cast<auto:36&>(<unnamed>::Arithmetics_Plus_Test<at::vec256::<unnamed>::Vec256<long int> >::TestBody::__lambda97<at::vec256::<unnamed>::Vec256<long int> >::_FUN::<unnamed>) ...)) (*)(auto:36&& ...)() const [with auto:36 = {long int, long int}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:36&& ...)>; T = long int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<long int>; Op1 = std::plus<long int>; Op2 = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:36&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = long int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:511:25:   required from 'void {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_add_overflow(long int, long int)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_add_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:431:46: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_add_overflow(T&, T&)
 std::enable_if_t<is_complex<T>::value, void> filter_add_overflow(T& a, T& b)
                                              ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:431:46: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:443:49: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_add_overflow(T&, T&) [with T = long int; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 std::enable_if_t < !is_complex<T>::value, void> filter_add_overflow(T& a, T& b) {
                                                 ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:443:49: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'long int&' from an rvalue of type 'long int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_add_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:4&& ...)> [with auto:4 = {long int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:148:13:   required by substitution of 'template<class ... auto:4> {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:4&& ...)>::operator decltype ((({anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:4&& ...)>)0u).operator()(static_cast<auto:4&>(<unnamed>::SignManipulation_Negate_Test<at::vec256::<unnamed>::Vec256<long int> >::TestBody::__lambda34<at::vec256::<unnamed>::Vec256<long int> >::_FUN::<unnamed>) ...)) (*)(auto:4&& ...)() const [with auto:4 = {long int}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:4&& ...)>; T = long int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<long int>; Op1 = std::negate<long int>; Op2 = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(vec)>; Filter = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:4&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = long int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:144:24:   required from 'void {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'long int&' from an rvalue of type 'long int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:148:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_int_minimum));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:423:6: note:   initializing argument 1 of 'void filter_int_minimum(T&) [with T = long int]'
 void filter_int_minimum(T& val) {
      ^~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:3&& ...)> [with auto:3 = {long int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:139:13:   required by substitution of 'template<class ... auto:3> {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:3&& ...)>::operator decltype ((({anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:3&& ...)>)0u).operator()(static_cast<auto:3&>(<unnamed>::SignManipulation_Absolute_Test<at::vec256::<unnamed>::Vec256<long int> >::TestBody::__lambda32<at::vec256::<unnamed>::Vec256<long int> >::_FUN::<unnamed>) ...)) (*)(auto:3&& ...)() const [with auto:3 = {long int}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:3&& ...)>; T = long int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<long int>; Op1 = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:2&& ...)>; Op2 = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(vec)>; Filter = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:3&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = long int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:135:24:   required from 'void {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'long int&' from an rvalue of type 'long int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:139:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_int_minimum));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:423:6: note:   initializing argument 1 of 'void filter_int_minimum(T&) [with T = long int]'
 void filter_int_minimum(T& val) {
      ^~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:45&& ...)> [with auto:45 = {int, int, int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:682:17:   required by substitution of 'template<class ... auto:45> {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:45&& ...)>::operator decltype ((({anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:45&& ...)>)0u).operator()(static_cast<auto:45&>(<unnamed>::MinMax_Clamp_Test<at::vec256::<unnamed>::Vec256<int> >::TestBody::__lambda129<at::vec256::<unnamed>::Vec256<int> >::_FUN::<unnamed>) ...)) (*)(auto:45&& ...)() const [with auto:45 = {int, int, int}]'
../aten/src/ATen/test/vec256_test_all_types.h:196:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&, T&) [with Filter = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:45&& ...)>; T = int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:1047:28:   required from 'void test_ternary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<int>; Op1 = int (*)(const int&, const int&, const int&); Op2 = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(const vec&, const vec&, const vec&)>; Filter = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]::<lambda(auto:45&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:676:26:   required from 'void {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'int&' from an rvalue of type 'int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:682:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_clamp));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:402:6: note:   initializing argument 1 of 'void filter_clamp(T&, T&, T&) [with T = int]'
 void filter_clamp(T& f, T& s, T& t) {
      ^~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:41&& ...)> [with auto:41 = {c10::complex<double>, c10::complex<double>}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]':
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13:   required by substitution of 'template<class ... auto:41> {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:41&& ...)>::operator decltype ((({anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:41&& ...)>)0u).operator()(static_cast<auto:41&>(<unnamed>::Arithmetics_Division_Test<at::vec256::<unnamed>::Vec256<c10::complex<double> > >::TestBody::__lambda105<at::vec256::<unnamed>::Vec256<c10::complex<double> > >::_FUN::<unnamed>) ...)) (*)(auto:41&& ...)() const [with auto:41 = {c10::complex<double>, c10::complex<double>}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:41&& ...)>; T = c10::complex<double>; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<c10::complex<double> >; Op1 = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:40&& ...)>; Op2 = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:41&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:544:25:   required from 'void {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_div_ub(c10::complex<double>, c10::complex<double>)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_div_ub));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:488:1: note: candidate: std::enable_if_t<is_complex<T>::value, void> filter_div_ub(T&, T&) [with T = c10::complex<double>; std::enable_if_t<is_complex<T>::value, void> = void] <near match>
 filter_div_ub(T& val1, T& val2) {
 ^~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:488:1: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'c10::complex<double>&' from an rvalue of type 'c10::complex<double>'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_div_ub));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:512:1: note: candidate: template<class T> std::enable_if_t<(! is_complex<T>::value), void> filter_div_ub(T&, T&)
 filter_div_ub(T& val1, T& val2) {
 ^~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:512:1: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:39&& ...)> [with auto:39 = {c10::complex<double>, c10::complex<double>}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]':
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13:   required by substitution of 'template<class ... auto:39> {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:39&& ...)>::operator decltype ((({anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:39&& ...)>)0u).operator()(static_cast<auto:39&>(<unnamed>::Arithmetics_Multiplication_Test<at::vec256::<unnamed>::Vec256<c10::complex<double> > >::TestBody::__lambda102<at::vec256::<unnamed>::Vec256<c10::complex<double> > >::_FUN::<unnamed>) ...)) (*)(auto:39&& ...)() const [with auto:39 = {c10::complex<double>, c10::complex<double>}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:39&& ...)>; T = c10::complex<double>; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<c10::complex<double> >; Op1 = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:38&& ...)>; Op2 = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:39&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:534:25:   required from 'void {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_mult_overflow(c10::complex<double>, c10::complex<double>)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_mult_overflow));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:482:1: note: candidate: std::enable_if_t<is_complex<T>::value, void> filter_mult_overflow(T&, T&) [with T = c10::complex<double>; std::enable_if_t<is_complex<T>::value, void> = void] <near match>
 filter_mult_overflow(T& val1, T& val2) {
 ^~~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:482:1: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'c10::complex<double>&' from an rvalue of type 'c10::complex<double>'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_mult_overflow));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:499:1: note: candidate: template<class T> std::enable_if_t<(! is_complex<T>::value), void> filter_mult_overflow(T&, T&)
 filter_mult_overflow(T& val1, T& val2) {
 ^~~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:499:1: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:37&& ...)> [with auto:37 = {c10::complex<double>, c10::complex<double>}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]':
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17:   required by substitution of 'template<class ... auto:37> {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:37&& ...)>::operator decltype ((({anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:37&& ...)>)0u).operator()(static_cast<auto:37&>(<unnamed>::Arithmetics_Minus_Test<at::vec256::<unnamed>::Vec256<c10::complex<double> > >::TestBody::__lambda99<at::vec256::<unnamed>::Vec256<c10::complex<double> > >::_FUN::<unnamed>) ...)) (*)(auto:37&& ...)() const [with auto:37 = {c10::complex<double>, c10::complex<double>}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:37&& ...)>; T = c10::complex<double>; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<c10::complex<double> >; Op1 = std::minus<c10::complex<double> >; Op2 = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:37&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:523:25:   required from 'void {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_sub_overflow(c10::complex<double>, c10::complex<double>)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_sub_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:437:46: note: candidate: std::enable_if_t<is_complex<T>::value, void> filter_sub_overflow(T&, T&) [with T = c10::complex<double>; std::enable_if_t<is_complex<T>::value, void> = void] <near match>
 std::enable_if_t<is_complex<T>::value, void> filter_sub_overflow(T& a, T& b)
                                              ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:437:46: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'c10::complex<double>&' from an rvalue of type 'c10::complex<double>'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_sub_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:462:49: note: candidate: template<class T> std::enable_if_t<(! is_complex<T>::value), void> filter_sub_overflow(T&, T&)
 std::enable_if_t < !is_complex<T>::value, void> filter_sub_overflow(T& a, T& b) {
                                                 ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:462:49: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:36&& ...)> [with auto:36 = {c10::complex<double>, c10::complex<double>}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]':
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17:   required by substitution of 'template<class ... auto:36> {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:36&& ...)>::operator decltype ((({anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:36&& ...)>)0u).operator()(static_cast<auto:36&>(<unnamed>::Arithmetics_Plus_Test<at::vec256::<unnamed>::Vec256<c10::complex<double> > >::TestBody::__lambda97<at::vec256::<unnamed>::Vec256<c10::complex<double> > >::_FUN::<unnamed>) ...)) (*)(auto:36&& ...)() const [with auto:36 = {c10::complex<double>, c10::complex<double>}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:36&& ...)>; T = c10::complex<double>; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<c10::complex<double> >; Op1 = std::plus<c10::complex<double> >; Op2 = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:36&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:511:25:   required from 'void {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_add_overflow(c10::complex<double>, c10::complex<double>)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_add_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:431:46: note: candidate: std::enable_if_t<is_complex<T>::value, void> filter_add_overflow(T&, T&) [with T = c10::complex<double>; std::enable_if_t<is_complex<T>::value, void> = void] <near match>
 std::enable_if_t<is_complex<T>::value, void> filter_add_overflow(T& a, T& b)
                                              ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:431:46: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'c10::complex<double>&' from an rvalue of type 'c10::complex<double>'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_add_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:443:49: note: candidate: template<class T> std::enable_if_t<(! is_complex<T>::value), void> filter_add_overflow(T&, T&)
 std::enable_if_t < !is_complex<T>::value, void> filter_add_overflow(T& a, T& b) {
                                                 ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:443:49: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:21&& ...)> [with auto:21 = {c10::complex<double>}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]':
../aten/src/ATen/test/vec256_test_all_types.cpp:336:13:   required by substitution of 'template<class ... auto:21> {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:21&& ...)>::operator decltype ((({anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:21&& ...)>)0u).operator()(static_cast<auto:21&>(<unnamed>::InverseTrigonometric_ATan_Test<at::vec256::<unnamed>::Vec256<c10::complex<double> > >::TestBody::__lambda67<at::vec256::<unnamed>::Vec256<c10::complex<double> > >::_FUN::<unnamed>) ...)) (*)(auto:21&& ...)() const [with auto:21 = {c10::complex<double>}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:21&& ...)>; T = c10::complex<double>; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<c10::complex<double> >; Op1 = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:20&& ...)>; Op2 = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(vec)>; Filter = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:21&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:331:24:   required from 'void {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'Complex<double>& {aka c10::complex<double>&}' from an rvalue of type 'c10::complex<double>'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:336:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:413:55: note:   initializing argument 1 of 'std::enable_if_t<is_complex<c10::complex<U> >::value, void> filter_zero(Complex<T>&) [with T = double; std::enable_if_t<is_complex<c10::complex<U> >::value, void> = void; Complex<T> = c10::complex<double>]'
 std::enable_if_t<is_complex<Complex<T>>::value, void> filter_zero(Complex<T>& val)
                                                       ^~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:4&& ...)> [with auto:4 = {c10::complex<double>}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]':
../aten/src/ATen/test/vec256_test_all_types.cpp:148:13:   required by substitution of 'template<class ... auto:4> {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:4&& ...)>::operator decltype ((({anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:4&& ...)>)0u).operator()(static_cast<auto:4&>(<unnamed>::SignManipulation_Negate_Test<at::vec256::<unnamed>::Vec256<c10::complex<double> > >::TestBody::__lambda34<at::vec256::<unnamed>::Vec256<c10::complex<double> > >::_FUN::<unnamed>) ...)) (*)(auto:4&& ...)() const [with auto:4 = {c10::complex<double>}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:4&& ...)>; T = c10::complex<double>; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<c10::complex<double> >; Op1 = std::negate<c10::complex<double> >; Op2 = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(vec)>; Filter = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:4&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:144:24:   required from 'void {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'c10::complex<double>&' from an rvalue of type 'c10::complex<double>'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:148:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_int_minimum));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:423:6: note:   initializing argument 1 of 'void filter_int_minimum(T&) [with T = c10::complex<double>]'
 void filter_int_minimum(T& val) {
      ^~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:3&& ...)> [with auto:3 = {c10::complex<double>}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]':
../aten/src/ATen/test/vec256_test_all_types.cpp:139:13:   required by substitution of 'template<class ... auto:3> {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:3&& ...)>::operator decltype ((({anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:3&& ...)>)0u).operator()(static_cast<auto:3&>(<unnamed>::SignManipulation_Absolute_Test<at::vec256::<unnamed>::Vec256<c10::complex<double> > >::TestBody::__lambda32<at::vec256::<unnamed>::Vec256<c10::complex<double> > >::_FUN::<unnamed>) ...)) (*)(auto:3&& ...)() const [with auto:3 = {c10::complex<double>}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:3&& ...)>; T = c10::complex<double>; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<c10::complex<double> >; Op1 = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:2&& ...)>; Op2 = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(vec)>; Filter = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]::<lambda(auto:3&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:135:24:   required from 'void {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<double> >]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'c10::complex<double>&' from an rvalue of type 'c10::complex<double>'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:139:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_int_minimum));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:423:6: note:   initializing argument 1 of 'void filter_int_minimum(T&) [with T = c10::complex<double>]'
 void filter_int_minimum(T& val) {
      ^~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:45&& ...)> [with auto:45 = {long int, long int, long int}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:682:17:   required by substitution of 'template<class ... auto:45> {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:45&& ...)>::operator decltype ((({anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:45&& ...)>)0u).operator()(static_cast<auto:45&>(<unnamed>::MinMax_Clamp_Test<at::vec256::<unnamed>::Vec256<long int> >::TestBody::__lambda129<at::vec256::<unnamed>::Vec256<long int> >::_FUN::<unnamed>) ...)) (*)(auto:45&& ...)() const [with auto:45 = {long int, long int, long int}]'
../aten/src/ATen/test/vec256_test_all_types.h:196:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&, T&) [with Filter = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:45&& ...)>; T = long int; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:1047:28:   required from 'void test_ternary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<long int>; Op1 = long int (*)(const long int&, const long int&, const long int&); Op2 = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(const vec&, const vec&, const vec&)>; Filter = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]::<lambda(auto:45&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = long int]'
../aten/src/ATen/test/vec256_test_all_types.cpp:676:26:   required from 'void {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<long int>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'long int&' from an rvalue of type 'long int'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:682:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_clamp));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:402:6: note:   initializing argument 1 of 'void filter_clamp(T&, T&, T&) [with T = long int]'
 void filter_clamp(T& f, T& s, T& t) {
      ^~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:41&& ...)> [with auto:41 = {c10::complex<float>, c10::complex<float>}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]':
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13:   required by substitution of 'template<class ... auto:41> {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:41&& ...)>::operator decltype ((({anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:41&& ...)>)0u).operator()(static_cast<auto:41&>(<unnamed>::Arithmetics_Division_Test<at::vec256::<unnamed>::Vec256<c10::complex<float> > >::TestBody::__lambda105<at::vec256::<unnamed>::Vec256<c10::complex<float> > >::_FUN::<unnamed>) ...)) (*)(auto:41&& ...)() const [with auto:41 = {c10::complex<float>, c10::complex<float>}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:41&& ...)>; T = c10::complex<float>; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<c10::complex<float> >; Op1 = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:40&& ...)>; Op2 = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:41&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:544:25:   required from 'void {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_div_ub(c10::complex<float>, c10::complex<float>)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_div_ub));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:488:1: note: candidate: std::enable_if_t<is_complex<T>::value, void> filter_div_ub(T&, T&) [with T = c10::complex<float>; std::enable_if_t<is_complex<T>::value, void> = void] <near match>
 filter_div_ub(T& val1, T& val2) {
 ^~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:488:1: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'c10::complex<float>&' from an rvalue of type 'c10::complex<float>'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_div_ub));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:512:1: note: candidate: template<class T> std::enable_if_t<(! is_complex<T>::value), void> filter_div_ub(T&, T&)
 filter_div_ub(T& val1, T& val2) {
 ^~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:512:1: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:39&& ...)> [with auto:39 = {c10::complex<float>, c10::complex<float>}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]':
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13:   required by substitution of 'template<class ... auto:39> {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:39&& ...)>::operator decltype ((({anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:39&& ...)>)0u).operator()(static_cast<auto:39&>(<unnamed>::Arithmetics_Multiplication_Test<at::vec256::<unnamed>::Vec256<c10::complex<float> > >::TestBody::__lambda102<at::vec256::<unnamed>::Vec256<c10::complex<float> > >::_FUN::<unnamed>) ...)) (*)(auto:39&& ...)() const [with auto:39 = {c10::complex<float>, c10::complex<float>}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:39&& ...)>; T = c10::complex<float>; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<c10::complex<float> >; Op1 = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:38&& ...)>; Op2 = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:39&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:534:25:   required from 'void {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_mult_overflow(c10::complex<float>, c10::complex<float>)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_mult_overflow));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:482:1: note: candidate: std::enable_if_t<is_complex<T>::value, void> filter_mult_overflow(T&, T&) [with T = c10::complex<float>; std::enable_if_t<is_complex<T>::value, void> = void] <near match>
 filter_mult_overflow(T& val1, T& val2) {
 ^~~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:482:1: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'c10::complex<float>&' from an rvalue of type 'c10::complex<float>'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_mult_overflow));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:499:1: note: candidate: template<class T> std::enable_if_t<(! is_complex<T>::value), void> filter_mult_overflow(T&, T&)
 filter_mult_overflow(T& val1, T& val2) {
 ^~~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:499:1: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:37&& ...)> [with auto:37 = {c10::complex<float>, c10::complex<float>}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]':
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17:   required by substitution of 'template<class ... auto:37> {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:37&& ...)>::operator decltype ((({anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:37&& ...)>)0u).operator()(static_cast<auto:37&>(<unnamed>::Arithmetics_Minus_Test<at::vec256::<unnamed>::Vec256<c10::complex<float> > >::TestBody::__lambda99<at::vec256::<unnamed>::Vec256<c10::complex<float> > >::_FUN::<unnamed>) ...)) (*)(auto:37&& ...)() const [with auto:37 = {c10::complex<float>, c10::complex<float>}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:37&& ...)>; T = c10::complex<float>; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<c10::complex<float> >; Op1 = std::minus<c10::complex<float> >; Op2 = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:37&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:523:25:   required from 'void {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_sub_overflow(c10::complex<float>, c10::complex<float>)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_sub_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:437:46: note: candidate: std::enable_if_t<is_complex<T>::value, void> filter_sub_overflow(T&, T&) [with T = c10::complex<float>; std::enable_if_t<is_complex<T>::value, void> = void] <near match>
 std::enable_if_t<is_complex<T>::value, void> filter_sub_overflow(T& a, T& b)
                                              ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:437:46: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'c10::complex<float>&' from an rvalue of type 'c10::complex<float>'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_sub_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:462:49: note: candidate: template<class T> std::enable_if_t<(! is_complex<T>::value), void> filter_sub_overflow(T&, T&)
 std::enable_if_t < !is_complex<T>::value, void> filter_sub_overflow(T& a, T& b) {
                                                 ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:462:49: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:36&& ...)> [with auto:36 = {c10::complex<float>, c10::complex<float>}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]':
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17:   required by substitution of 'template<class ... auto:36> {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:36&& ...)>::operator decltype ((({anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:36&& ...)>)0u).operator()(static_cast<auto:36&>(<unnamed>::Arithmetics_Plus_Test<at::vec256::<unnamed>::Vec256<c10::complex<float> > >::TestBody::__lambda97<at::vec256::<unnamed>::Vec256<c10::complex<float> > >::_FUN::<unnamed>) ...)) (*)(auto:36&& ...)() const [with auto:36 = {c10::complex<float>, c10::complex<float>}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:36&& ...)>; T = c10::complex<float>; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<c10::complex<float> >; Op1 = std::plus<c10::complex<float> >; Op2 = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:36&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:511:25:   required from 'void {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_add_overflow(c10::complex<float>, c10::complex<float>)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_add_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:431:46: note: candidate: std::enable_if_t<is_complex<T>::value, void> filter_add_overflow(T&, T&) [with T = c10::complex<float>; std::enable_if_t<is_complex<T>::value, void> = void] <near match>
 std::enable_if_t<is_complex<T>::value, void> filter_add_overflow(T& a, T& b)
                                              ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:431:46: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'c10::complex<float>&' from an rvalue of type 'c10::complex<float>'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_add_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:443:49: note: candidate: template<class T> std::enable_if_t<(! is_complex<T>::value), void> filter_add_overflow(T&, T&)
 std::enable_if_t < !is_complex<T>::value, void> filter_add_overflow(T& a, T& b) {
                                                 ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:443:49: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:21&& ...)> [with auto:21 = {c10::complex<float>}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]':
../aten/src/ATen/test/vec256_test_all_types.cpp:336:13:   required by substitution of 'template<class ... auto:21> {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:21&& ...)>::operator decltype ((({anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:21&& ...)>)0u).operator()(static_cast<auto:21&>(<unnamed>::InverseTrigonometric_ATan_Test<at::vec256::<unnamed>::Vec256<c10::complex<float> > >::TestBody::__lambda67<at::vec256::<unnamed>::Vec256<c10::complex<float> > >::_FUN::<unnamed>) ...)) (*)(auto:21&& ...)() const [with auto:21 = {c10::complex<float>}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:21&& ...)>; T = c10::complex<float>; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<c10::complex<float> >; Op1 = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:20&& ...)>; Op2 = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(vec)>; Filter = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:21&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:331:24:   required from 'void {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'Complex<float>& {aka c10::complex<float>&}' from an rvalue of type 'c10::complex<float>'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:336:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:413:55: note:   initializing argument 1 of 'std::enable_if_t<is_complex<c10::complex<U> >::value, void> filter_zero(Complex<T>&) [with T = float; std::enable_if_t<is_complex<c10::complex<U> >::value, void> = void; Complex<T> = c10::complex<float>]'
 std::enable_if_t<is_complex<Complex<T>>::value, void> filter_zero(Complex<T>& val)
                                                       ^~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:4&& ...)> [with auto:4 = {c10::complex<float>}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]':
../aten/src/ATen/test/vec256_test_all_types.cpp:148:13:   required by substitution of 'template<class ... auto:4> {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:4&& ...)>::operator decltype ((({anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:4&& ...)>)0u).operator()(static_cast<auto:4&>(<unnamed>::SignManipulation_Negate_Test<at::vec256::<unnamed>::Vec256<c10::complex<float> > >::TestBody::__lambda34<at::vec256::<unnamed>::Vec256<c10::complex<float> > >::_FUN::<unnamed>) ...)) (*)(auto:4&& ...)() const [with auto:4 = {c10::complex<float>}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:4&& ...)>; T = c10::complex<float>; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<c10::complex<float> >; Op1 = std::negate<c10::complex<float> >; Op2 = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(vec)>; Filter = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:4&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:144:24:   required from 'void {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'c10::complex<float>&' from an rvalue of type 'c10::complex<float>'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:148:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_int_minimum));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:423:6: note:   initializing argument 1 of 'void filter_int_minimum(T&) [with T = c10::complex<float>]'
 void filter_int_minimum(T& val) {
      ^~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:3&& ...)> [with auto:3 = {c10::complex<float>}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]':
../aten/src/ATen/test/vec256_test_all_types.cpp:139:13:   required by substitution of 'template<class ... auto:3> {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:3&& ...)>::operator decltype ((({anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:3&& ...)>)0u).operator()(static_cast<auto:3&>(<unnamed>::SignManipulation_Absolute_Test<at::vec256::<unnamed>::Vec256<c10::complex<float> > >::TestBody::__lambda32<at::vec256::<unnamed>::Vec256<c10::complex<float> > >::_FUN::<unnamed>) ...)) (*)(auto:3&& ...)() const [with auto:3 = {c10::complex<float>}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:3&& ...)>; T = c10::complex<float>; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<c10::complex<float> >; Op1 = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:2&& ...)>; Op2 = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(vec)>; Filter = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]::<lambda(auto:3&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:135:24:   required from 'void {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<c10::complex<float> >]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'c10::complex<float>&' from an rvalue of type 'c10::complex<float>'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:139:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_int_minimum));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:423:6: note:   initializing argument 1 of 'void filter_int_minimum(T&) [with T = c10::complex<float>]'
 void filter_int_minimum(T& val) {
      ^~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:45&& ...)> [with auto:45 = {double, double, double}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:682:17:   required by substitution of 'template<class ... auto:45> {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:45&& ...)>::operator decltype ((({anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:45&& ...)>)0u).operator()(static_cast<auto:45&>(<unnamed>::MinMax_Clamp_Test<at::vec256::<unnamed>::Vec256<double> >::TestBody::__lambda129<at::vec256::<unnamed>::Vec256<double> >::_FUN::<unnamed>) ...)) (*)(auto:45&& ...)() const [with auto:45 = {double, double, double}]'
../aten/src/ATen/test/vec256_test_all_types.h:196:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&, T&) [with Filter = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:45&& ...)>; T = double; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:1047:28:   required from 'void test_ternary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<double>; Op1 = double (*)(const double&, const double&, const double&); Op2 = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(const vec&, const vec&, const vec&)>; Filter = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:45&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:676:26:   required from 'void {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'double&' from an rvalue of type 'double'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:682:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_clamp));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:402:6: note:   initializing argument 1 of 'void filter_clamp(T&, T&, T&) [with T = double]'
 void filter_clamp(T& f, T& s, T& t) {
      ^~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:41&& ...)> [with auto:41 = {double, double}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13:   required by substitution of 'template<class ... auto:41> {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:41&& ...)>::operator decltype ((({anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:41&& ...)>)0u).operator()(static_cast<auto:41&>(<unnamed>::Arithmetics_Division_Test<at::vec256::<unnamed>::Vec256<double> >::TestBody::__lambda105<at::vec256::<unnamed>::Vec256<double> >::_FUN::<unnamed>) ...)) (*)(auto:41&& ...)() const [with auto:41 = {double, double}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:41&& ...)>; T = double; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<double>; Op1 = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:40&& ...)>; Op2 = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:41&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:544:25:   required from 'void {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_div_ub(double, double)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_div_ub));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:488:1: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_div_ub(T&, T&)
 filter_div_ub(T& val1, T& val2) {
 ^~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:488:1: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:512:1: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_div_ub(T&, T&) [with T = double; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 filter_div_ub(T& val1, T& val2) {
 ^~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:512:1: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'double&' from an rvalue of type 'double'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_div_ub));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:39&& ...)> [with auto:39 = {double, double}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13:   required by substitution of 'template<class ... auto:39> {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:39&& ...)>::operator decltype ((({anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:39&& ...)>)0u).operator()(static_cast<auto:39&>(<unnamed>::Arithmetics_Multiplication_Test<at::vec256::<unnamed>::Vec256<double> >::TestBody::__lambda102<at::vec256::<unnamed>::Vec256<double> >::_FUN::<unnamed>) ...)) (*)(auto:39&& ...)() const [with auto:39 = {double, double}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:39&& ...)>; T = double; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<double>; Op1 = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:38&& ...)>; Op2 = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:39&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:534:25:   required from 'void {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_mult_overflow(double, double)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_mult_overflow));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:482:1: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_mult_overflow(T&, T&)
 filter_mult_overflow(T& val1, T& val2) {
 ^~~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:482:1: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:499:1: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_mult_overflow(T&, T&) [with T = double; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 filter_mult_overflow(T& val1, T& val2) {
 ^~~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:499:1: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'double&' from an rvalue of type 'double'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_mult_overflow));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:37&& ...)> [with auto:37 = {double, double}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17:   required by substitution of 'template<class ... auto:37> {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:37&& ...)>::operator decltype ((({anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:37&& ...)>)0u).operator()(static_cast<auto:37&>(<unnamed>::Arithmetics_Minus_Test<at::vec256::<unnamed>::Vec256<double> >::TestBody::__lambda99<at::vec256::<unnamed>::Vec256<double> >::_FUN::<unnamed>) ...)) (*)(auto:37&& ...)() const [with auto:37 = {double, double}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:37&& ...)>; T = double; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<double>; Op1 = std::minus<double>; Op2 = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:37&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:523:25:   required from 'void {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_sub_overflow(double, double)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_sub_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:437:46: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_sub_overflow(T&, T&)
 std::enable_if_t<is_complex<T>::value, void> filter_sub_overflow(T& a, T& b)
                                              ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:437:46: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:462:49: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_sub_overflow(T&, T&) [with T = double; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 std::enable_if_t < !is_complex<T>::value, void> filter_sub_overflow(T& a, T& b) {
                                                 ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:462:49: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'double&' from an rvalue of type 'double'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_sub_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:36&& ...)> [with auto:36 = {double, double}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17:   required by substitution of 'template<class ... auto:36> {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:36&& ...)>::operator decltype ((({anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:36&& ...)>)0u).operator()(static_cast<auto:36&>(<unnamed>::Arithmetics_Plus_Test<at::vec256::<unnamed>::Vec256<double> >::TestBody::__lambda97<at::vec256::<unnamed>::Vec256<double> >::_FUN::<unnamed>) ...)) (*)(auto:36&& ...)() const [with auto:36 = {double, double}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:36&& ...)>; T = double; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<double>; Op1 = std::plus<double>; Op2 = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:36&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:511:25:   required from 'void {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_add_overflow(double, double)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_add_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:431:46: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_add_overflow(T&, T&)
 std::enable_if_t<is_complex<T>::value, void> filter_add_overflow(T& a, T& b)
                                              ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:431:46: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:443:49: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_add_overflow(T&, T&) [with T = double; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 std::enable_if_t < !is_complex<T>::value, void> filter_add_overflow(T& a, T& b) {
                                                 ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:443:49: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'double&' from an rvalue of type 'double'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_add_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:21&& ...)> [with auto:21 = {double}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:336:13:   required by substitution of 'template<class ... auto:21> {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:21&& ...)>::operator decltype ((({anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:21&& ...)>)0u).operator()(static_cast<auto:21&>(<unnamed>::InverseTrigonometric_ATan_Test<at::vec256::<unnamed>::Vec256<double> >::TestBody::__lambda67<at::vec256::<unnamed>::Vec256<double> >::_FUN::<unnamed>) ...)) (*)(auto:21&& ...)() const [with auto:21 = {double}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:21&& ...)>; T = double; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<double>; Op1 = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:20&& ...)>; Op2 = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(vec)>; Filter = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:21&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:331:24:   required from 'void {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_zero(double)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:336:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:409:6: note: candidate: void filter_zero(T&) [with T = double] <near match>
 void filter_zero(T& val) {
      ^~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:409:6: note:   conversion of argument 1 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'double&' from an rvalue of type 'double'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:336:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:413:55: note: candidate: template<class T> std::enable_if_t<is_complex<c10::complex<U> >::value, void> filter_zero(Complex<T>&)
 std::enable_if_t<is_complex<Complex<T>>::value, void> filter_zero(Complex<T>& val)
                                                       ^~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:413:55: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: note:   mismatched types 'Complex<T>' and 'double'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:336:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SqrtAndReciprocalReal_Reciprocal_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:11&& ...)> [with auto:11 = {double}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:218:13:   required by substitution of 'template<class ... auto:11> {anonymous}::SqrtAndReciprocalReal_Reciprocal_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:11&& ...)>::operator decltype ((({anonymous}::SqrtAndReciprocalReal_Reciprocal_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:11&& ...)>)0u).operator()(static_cast<auto:11&>(<unnamed>::SqrtAndReciprocalReal_Reciprocal_Test<at::vec256::<unnamed>::Vec256<double> >::TestBody::__lambda48<at::vec256::<unnamed>::Vec256<double> >::_FUN::<unnamed>) ...)) (*)(auto:11&& ...)() const [with auto:11 = {double}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SqrtAndReciprocalReal_Reciprocal_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:11&& ...)>; T = double; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<double>; Op1 = double (*)(double); Op2 = {anonymous}::SqrtAndReciprocalReal_Reciprocal_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(vec)>; Filter = {anonymous}::SqrtAndReciprocalReal_Reciprocal_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:11&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:213:24:   required from 'void {anonymous}::SqrtAndReciprocalReal_Reciprocal_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_zero(double)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:218:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:409:6: note: candidate: void filter_zero(T&) [with T = double] <near match>
 void filter_zero(T& val) {
      ^~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:409:6: note:   conversion of argument 1 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'double&' from an rvalue of type 'double'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:218:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:413:55: note: candidate: template<class T> std::enable_if_t<is_complex<c10::complex<U> >::value, void> filter_zero(Complex<T>&)
 std::enable_if_t<is_complex<Complex<T>>::value, void> filter_zero(Complex<T>& val)
                                                       ^~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:413:55: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: note:   mismatched types 'Complex<T>' and 'double'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:218:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SqrtAndReciprocalReal_RSqrt_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:10&& ...)> [with auto:10 = {double}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:209:13:   required by substitution of 'template<class ... auto:10> {anonymous}::SqrtAndReciprocalReal_RSqrt_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:10&& ...)>::operator decltype ((({anonymous}::SqrtAndReciprocalReal_RSqrt_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:10&& ...)>)0u).operator()(static_cast<auto:10&>(<unnamed>::SqrtAndReciprocalReal_RSqrt_Test<at::vec256::<unnamed>::Vec256<double> >::TestBody::__lambda46<at::vec256::<unnamed>::Vec256<double> >::_FUN::<unnamed>) ...)) (*)(auto:10&& ...)() const [with auto:10 = {double}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SqrtAndReciprocalReal_RSqrt_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:10&& ...)>; T = double; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<double>; Op1 = double (*)(double); Op2 = {anonymous}::SqrtAndReciprocalReal_RSqrt_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(vec)>; Filter = {anonymous}::SqrtAndReciprocalReal_RSqrt_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:10&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:204:24:   required from 'void {anonymous}::SqrtAndReciprocalReal_RSqrt_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_zero(double)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:209:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:409:6: note: candidate: void filter_zero(T&) [with T = double] <near match>
 void filter_zero(T& val) {
      ^~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:409:6: note:   conversion of argument 1 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'double&' from an rvalue of type 'double'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:209:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:413:55: note: candidate: template<class T> std::enable_if_t<is_complex<c10::complex<U> >::value, void> filter_zero(Complex<T>&)
 std::enable_if_t<is_complex<Complex<T>>::value, void> filter_zero(Complex<T>& val)
                                                       ^~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:413:55: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: note:   mismatched types 'Complex<T>' and 'double'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:209:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:4&& ...)> [with auto:4 = {double}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:148:13:   required by substitution of 'template<class ... auto:4> {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:4&& ...)>::operator decltype ((({anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:4&& ...)>)0u).operator()(static_cast<auto:4&>(<unnamed>::SignManipulation_Negate_Test<at::vec256::<unnamed>::Vec256<double> >::TestBody::__lambda34<at::vec256::<unnamed>::Vec256<double> >::_FUN::<unnamed>) ...)) (*)(auto:4&& ...)() const [with auto:4 = {double}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:4&& ...)>; T = double; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<double>; Op1 = std::negate<double>; Op2 = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(vec)>; Filter = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:4&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:144:24:   required from 'void {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'double&' from an rvalue of type 'double'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:148:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_int_minimum));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:423:6: note:   initializing argument 1 of 'void filter_int_minimum(T&) [with T = double]'
 void filter_int_minimum(T& val) {
      ^~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:3&& ...)> [with auto:3 = {double}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:139:13:   required by substitution of 'template<class ... auto:3> {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:3&& ...)>::operator decltype ((({anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:3&& ...)>)0u).operator()(static_cast<auto:3&>(<unnamed>::SignManipulation_Absolute_Test<at::vec256::<unnamed>::Vec256<double> >::TestBody::__lambda32<at::vec256::<unnamed>::Vec256<double> >::_FUN::<unnamed>) ...)) (*)(auto:3&& ...)() const [with auto:3 = {double}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:3&& ...)>; T = double; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<double>; Op1 = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:2&& ...)>; Op2 = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(vec)>; Filter = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]::<lambda(auto:3&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = double]'
../aten/src/ATen/test/vec256_test_all_types.cpp:135:24:   required from 'void {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<double>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'double&' from an rvalue of type 'double'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:139:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_int_minimum));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:423:6: note:   initializing argument 1 of 'void filter_int_minimum(T&) [with T = double]'
 void filter_int_minimum(T& val) {
      ^~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:45&& ...)> [with auto:45 = {float, float, float}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:682:17:   required by substitution of 'template<class ... auto:45> {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:45&& ...)>::operator decltype ((({anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:45&& ...)>)0u).operator()(static_cast<auto:45&>(<unnamed>::MinMax_Clamp_Test<at::vec256::<unnamed>::Vec256<float> >::TestBody::__lambda129<at::vec256::<unnamed>::Vec256<float> >::_FUN::<unnamed>) ...)) (*)(auto:45&& ...)() const [with auto:45 = {float, float, float}]'
../aten/src/ATen/test/vec256_test_all_types.h:196:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&, T&) [with Filter = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:45&& ...)>; T = float; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:1047:28:   required from 'void test_ternary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<float>; Op1 = float (*)(const float&, const float&, const float&); Op2 = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(const vec&, const vec&, const vec&)>; Filter = {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:45&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:676:26:   required from 'void {anonymous}::MinMax_Clamp_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'float&' from an rvalue of type 'float'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:682:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_clamp));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:402:6: note:   initializing argument 1 of 'void filter_clamp(T&, T&, T&) [with T = float]'
 void filter_clamp(T& f, T& s, T& t) {
      ^~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:41&& ...)> [with auto:41 = {float, float}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13:   required by substitution of 'template<class ... auto:41> {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:41&& ...)>::operator decltype ((({anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:41&& ...)>)0u).operator()(static_cast<auto:41&>(<unnamed>::Arithmetics_Division_Test<at::vec256::<unnamed>::Vec256<float> >::TestBody::__lambda105<at::vec256::<unnamed>::Vec256<float> >::_FUN::<unnamed>) ...)) (*)(auto:41&& ...)() const [with auto:41 = {float, float}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:41&& ...)>; T = float; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<float>; Op1 = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:40&& ...)>; Op2 = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:41&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:544:25:   required from 'void {anonymous}::Arithmetics_Division_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_div_ub(float, float)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_div_ub));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:488:1: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_div_ub(T&, T&)
 filter_div_ub(T& val1, T& val2) {
 ^~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:488:1: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:512:1: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_div_ub(T&, T&) [with T = float; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 filter_div_ub(T& val1, T& val2) {
 ^~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:512:1: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'float&' from an rvalue of type 'float'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:549:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_div_ub));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:39&& ...)> [with auto:39 = {float, float}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13:   required by substitution of 'template<class ... auto:39> {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:39&& ...)>::operator decltype ((({anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:39&& ...)>)0u).operator()(static_cast<auto:39&>(<unnamed>::Arithmetics_Multiplication_Test<at::vec256::<unnamed>::Vec256<float> >::TestBody::__lambda102<at::vec256::<unnamed>::Vec256<float> >::_FUN::<unnamed>) ...)) (*)(auto:39&& ...)() const [with auto:39 = {float, float}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:39&& ...)>; T = float; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<float>; Op1 = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:38&& ...)>; Op2 = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:39&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:534:25:   required from 'void {anonymous}::Arithmetics_Multiplication_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_mult_overflow(float, float)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_mult_overflow));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:482:1: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_mult_overflow(T&, T&)
 filter_mult_overflow(T& val1, T& val2) {
 ^~~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:482:1: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:499:1: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_mult_overflow(T&, T&) [with T = float; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 filter_mult_overflow(T& val1, T& val2) {
 ^~~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:499:1: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'float&' from an rvalue of type 'float'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:539:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_mult_overflow));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:37&& ...)> [with auto:37 = {float, float}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17:   required by substitution of 'template<class ... auto:37> {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:37&& ...)>::operator decltype ((({anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:37&& ...)>)0u).operator()(static_cast<auto:37&>(<unnamed>::Arithmetics_Minus_Test<at::vec256::<unnamed>::Vec256<float> >::TestBody::__lambda99<at::vec256::<unnamed>::Vec256<float> >::_FUN::<unnamed>) ...)) (*)(auto:37&& ...)() const [with auto:37 = {float, float}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:37&& ...)>; T = float; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<float>; Op1 = std::minus<float>; Op2 = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:37&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:523:25:   required from 'void {anonymous}::Arithmetics_Minus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_sub_overflow(float, float)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_sub_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:437:46: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_sub_overflow(T&, T&)
 std::enable_if_t<is_complex<T>::value, void> filter_sub_overflow(T& a, T& b)
                                              ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:437:46: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:462:49: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_sub_overflow(T&, T&) [with T = float; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 std::enable_if_t < !is_complex<T>::value, void> filter_sub_overflow(T& a, T& b) {
                                                 ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:462:49: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'float&' from an rvalue of type 'float'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:530:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_sub_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:36&& ...)> [with auto:36 = {float, float}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17:   required by substitution of 'template<class ... auto:36> {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:36&& ...)>::operator decltype ((({anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:36&& ...)>)0u).operator()(static_cast<auto:36&>(<unnamed>::Arithmetics_Plus_Test<at::vec256::<unnamed>::Vec256<float> >::TestBody::__lambda97<at::vec256::<unnamed>::Vec256<float> >::_FUN::<unnamed>) ...)) (*)(auto:36&& ...)() const [with auto:36 = {float, float}]'
../aten/src/ATen/test/vec256_test_all_types.h:189:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&, T&) [with Filter = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:36&& ...)>; T = float; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:981:28:   required from 'void test_binary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<float>; Op1 = std::plus<float>; Op2 = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(const vec&, const vec&)>; Filter = {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:36&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:511:25:   required from 'void {anonymous}::Arithmetics_Plus_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_add_overflow(float, float)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_add_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:431:46: note: candidate: template<class T> std::enable_if_t<is_complex<T>::value, void> filter_add_overflow(T&, T&)
 std::enable_if_t<is_complex<T>::value, void> filter_add_overflow(T& a, T& b)
                                              ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:431:46: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:443:49: note: candidate: std::enable_if_t<(! is_complex<T>::value), void> filter_add_overflow(T&, T&) [with T = float; std::enable_if_t<(! is_complex<T>::value), void> = void] <near match>
 std::enable_if_t < !is_complex<T>::value, void> filter_add_overflow(T& a, T& b) {
                                                 ^~~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:443:49: note:   conversion of argument 2 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'float&' from an rvalue of type 'float'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:518:17: note: in expansion of macro 'RESOLVE_OVERLOAD'
                 RESOLVE_OVERLOAD(filter_add_overflow));
                 ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:21&& ...)> [with auto:21 = {float}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:336:13:   required by substitution of 'template<class ... auto:21> {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:21&& ...)>::operator decltype ((({anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:21&& ...)>)0u).operator()(static_cast<auto:21&>(<unnamed>::InverseTrigonometric_ATan_Test<at::vec256::<unnamed>::Vec256<float> >::TestBody::__lambda67<at::vec256::<unnamed>::Vec256<float> >::_FUN::<unnamed>) ...)) (*)(auto:21&& ...)() const [with auto:21 = {float}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:21&& ...)>; T = float; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<float>; Op1 = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:20&& ...)>; Op2 = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(vec)>; Filter = {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:21&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:331:24:   required from 'void {anonymous}::InverseTrigonometric_ATan_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_zero(float)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:336:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:409:6: note: candidate: void filter_zero(T&) [with T = float] <near match>
 void filter_zero(T& val) {
      ^~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:409:6: note:   conversion of argument 1 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'float&' from an rvalue of type 'float'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:336:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:413:55: note: candidate: template<class T> std::enable_if_t<is_complex<c10::complex<U> >::value, void> filter_zero(Complex<T>&)
 std::enable_if_t<is_complex<Complex<T>>::value, void> filter_zero(Complex<T>& val)
                                                       ^~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:413:55: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: note:   mismatched types 'Complex<T>' and 'float'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:336:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SqrtAndReciprocalReal_Reciprocal_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:11&& ...)> [with auto:11 = {float}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:218:13:   required by substitution of 'template<class ... auto:11> {anonymous}::SqrtAndReciprocalReal_Reciprocal_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:11&& ...)>::operator decltype ((({anonymous}::SqrtAndReciprocalReal_Reciprocal_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:11&& ...)>)0u).operator()(static_cast<auto:11&>(<unnamed>::SqrtAndReciprocalReal_Reciprocal_Test<at::vec256::<unnamed>::Vec256<float> >::TestBody::__lambda48<at::vec256::<unnamed>::Vec256<float> >::_FUN::<unnamed>) ...)) (*)(auto:11&& ...)() const [with auto:11 = {float}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SqrtAndReciprocalReal_Reciprocal_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:11&& ...)>; T = float; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<float>; Op1 = float (*)(float); Op2 = {anonymous}::SqrtAndReciprocalReal_Reciprocal_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(vec)>; Filter = {anonymous}::SqrtAndReciprocalReal_Reciprocal_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:11&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:213:24:   required from 'void {anonymous}::SqrtAndReciprocalReal_Reciprocal_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_zero(float)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:218:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:409:6: note: candidate: void filter_zero(T&) [with T = float] <near match>
 void filter_zero(T& val) {
      ^~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:409:6: note:   conversion of argument 1 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'float&' from an rvalue of type 'float'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:218:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:413:55: note: candidate: template<class T> std::enable_if_t<is_complex<c10::complex<U> >::value, void> filter_zero(Complex<T>&)
 std::enable_if_t<is_complex<Complex<T>>::value, void> filter_zero(Complex<T>& val)
                                                       ^~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:413:55: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: note:   mismatched types 'Complex<T>' and 'float'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:218:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SqrtAndReciprocalReal_RSqrt_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:10&& ...)> [with auto:10 = {float}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:209:13:   required by substitution of 'template<class ... auto:10> {anonymous}::SqrtAndReciprocalReal_RSqrt_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:10&& ...)>::operator decltype ((({anonymous}::SqrtAndReciprocalReal_RSqrt_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:10&& ...)>)0u).operator()(static_cast<auto:10&>(<unnamed>::SqrtAndReciprocalReal_RSqrt_Test<at::vec256::<unnamed>::Vec256<float> >::TestBody::__lambda46<at::vec256::<unnamed>::Vec256<float> >::_FUN::<unnamed>) ...)) (*)(auto:10&& ...)() const [with auto:10 = {float}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SqrtAndReciprocalReal_RSqrt_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:10&& ...)>; T = float; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<float>; Op1 = float (*)(float); Op2 = {anonymous}::SqrtAndReciprocalReal_RSqrt_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(vec)>; Filter = {anonymous}::SqrtAndReciprocalReal_RSqrt_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:10&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:204:24:   required from 'void {anonymous}::SqrtAndReciprocalReal_RSqrt_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: no matching function for call to 'filter_zero(float)'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:209:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:409:6: note: candidate: void filter_zero(T&) [with T = float] <near match>
 void filter_zero(T& val) {
      ^~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:409:6: note:   conversion of argument 1 would be ill-formed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'float&' from an rvalue of type 'float'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:209:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:413:55: note: candidate: template<class T> std::enable_if_t<is_complex<c10::complex<U> >::value, void> filter_zero(Complex<T>&)
 std::enable_if_t<is_complex<Complex<T>>::value, void> filter_zero(Complex<T>& val)
                                                       ^~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:413:55: note:   template argument deduction/substitution failed:
../aten/src/ATen/test/vec256_test_all_types.h:40:23: note:   mismatched types 'Complex<T>' and 'float'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:209:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_zero));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:4&& ...)> [with auto:4 = {float}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:148:13:   required by substitution of 'template<class ... auto:4> {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:4&& ...)>::operator decltype ((({anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:4&& ...)>)0u).operator()(static_cast<auto:4&>(<unnamed>::SignManipulation_Negate_Test<at::vec256::<unnamed>::Vec256<float> >::TestBody::__lambda34<at::vec256::<unnamed>::Vec256<float> >::_FUN::<unnamed>) ...)) (*)(auto:4&& ...)() const [with auto:4 = {float}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:4&& ...)>; T = float; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<float>; Op1 = std::negate<float>; Op2 = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(vec)>; Filter = {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:4&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:144:24:   required from 'void {anonymous}::SignManipulation_Negate_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'float&' from an rvalue of type 'float'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:148:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_int_minimum));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:423:6: note:   initializing argument 1 of 'void filter_int_minimum(T&) [with T = float]'
 void filter_int_minimum(T& val) {
      ^~~~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.cpp: In instantiation of '{anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody()::<lambda(auto:3&& ...)> [with auto:3 = {float}; gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]':
../aten/src/ATen/test/vec256_test_all_types.cpp:139:13:   required by substitution of 'template<class ... auto:3> {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:3&& ...)>::operator decltype ((({anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:3&& ...)>)0u).operator()(static_cast<auto:3&>(<unnamed>::SignManipulation_Absolute_Test<at::vec256::<unnamed>::Vec256<float> >::TestBody::__lambda32<at::vec256::<unnamed>::Vec256<float> >::_FUN::<unnamed>) ...)) (*)(auto:3&& ...)() const [with auto:3 = {float}]'
../aten/src/ATen/test/vec256_test_all_types.h:182:18:   required from 'std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> call_filter(Filter, T&) [with Filter = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:3&& ...)>; T = float; std::enable_if_t<(! std::is_same<Filter, std::nullptr_t>::value), void> = void]'
../aten/src/ATen/test/vec256_test_all_types.h:921:28:   required from 'void test_unary(std::__cxx11::string, Op1, Op2, const TestingCase<T>&, Filter) [with T = at::vec256::{anonymous}::Vec256<float>; Op1 = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:2&& ...)>; Op2 = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(vec)>; Filter = {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]::<lambda(auto:3&& ...)>; std::__cxx11::string = std::__cxx11::basic_string<char>; typename VecTypeHelper<T>::memStorageType = float]'
../aten/src/ATen/test/vec256_test_all_types.cpp:135:24:   required from 'void {anonymous}::SignManipulation_Absolute_Test<gtest_TypeParam_>::TestBody() [with gtest_TypeParam_ = at::vec256::{anonymous}::Vec256<float>]'
../aten/src/ATen/test/vec256_test_all_types.cpp:990:1:   required from here
../aten/src/ATen/test/vec256_test_all_types.h:40:23: error: invalid initialization of non-const reference of type 'float&' from an rvalue of type 'float'
     return __VA_ARGS__(std::forward<decltype(args)>(args)...); \
                        
../aten/src/ATen/test/vec256_test_all_types.cpp:139:13: note: in expansion of macro 'RESOLVE_OVERLOAD'
             RESOLVE_OVERLOAD(filter_int_minimum));
             ^~~~~~~~~~~~~~~~
../aten/src/ATen/test/vec256_test_all_types.h:423:6: note:   initializing argument 1 of 'void filter_int_minimum(T&) [with T = float]'
 void filter_int_minimum(T& val) {
      ^~~~~~~~~~~~~~~~~~
[2722/3378] Building CXX object caffe2/CMakeFiles/caffe2_pybind11_state.dir/python/pybind_state.cc.o
ninja: build stopped: subcommand failed.
Traceback (most recent call last):
  File "/pytorch/setup.py", line 760, in <module>
    build_deps()
  File "/pytorch/setup.py", line 310, in build_deps
    build_caffe2(version=version,
  File "/pytorch/tools/build_pytorch_libs.py", line 62, in build_caffe2
    cmake.build(my_env)
  File "/pytorch/tools/setup_helpers/cmake.py", line 345, in build
    self.run(build_args, my_env)
  File "/pytorch/tools/setup_helpers/cmake.py", line 141, in run
    check_call(command, cwd=self.build_dir, env=env)
  File "/usr/local/lib/python3.9/subprocess.py", line 373, in check_call
    raise CalledProcessError(retcode, cmd)
subprocess.CalledProcessError: Command '['cmake', '--build', '.', '--target', 'install', '--config', 'Release', '--', '-j', '8']' returned non-zero exit status 1.
[root@47eaaa797bab pytorch]# 